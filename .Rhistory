library(ggplot2)
rrandu(10)
rrandu(10)
randu
randu(1)
randu(10)
randu
randu[1]
randu[1:40]
randu[c(1:40)]
qplot(randu)
qplot(randu)+geom_point()
qplot(randu[1])+geom_point()
randu[2]
qplot(randu[1],randu[2])+geom_point()
x=randu[1]
x
x[1:20]
x[1:20,]
x[1:60,]
randu[1:60,]
qplot(randu[1:60,1], randu[1:60,2])
qplot(randu[1:60,1], randu[1:60,2]) + geom_area()
qplot(randu[1:60,1], randu[1:60,2]) + geom_area()+ xlab("psychology of a person (psychBits/life)")
qplot(randu[1:60,1], randu[1:60,2]) + geom_area()+ xlab("psychology of a person (psychBits/life)") + theme_classic()
qplot(randu[1:60,1], randu[1:60,2]) + geom_area()+ xlab("psychology of a person (psychBits/life)") + theme_classic() +ylab('Total Relative Umbilical Morph Points')
qplot(randu[1:60,1], randu[1:60,2]) + geom_area()+ xlab("psychology of a person (psychBits/life)") + theme_classic() +ylab('Total Relative Umbilical Morph Points (TRUMP)')
qplot(randu[1:60,1], randu[1:60,2]) + geom_point()+geom_smooth(se=FALSE)+ xlab("psychology of a person (psychBits/life)") + theme_classic() +ylab('Total Relative Umbilical Morph Points (TRUMP)')
qplot(randu[1:60,1], randu[1:60,2]) + geom_area()+ xlab("psychology of a person (psychBits/life)") + theme_classic(base_size = 25) +ylab('Total Relative Umbilical Morph Points (TRUMP)')
qplot(randu[1:60,1], randu[1:60,2]) + geom_point()+geom_smooth(se=FALSE)+ xlab("psychology of a person (psychBits/life)") + theme_classic(base_size = 18) +ylab('Total Relative Umbilical Morph Points (TRUMP)')
qplot(randu[1:60,1], randu[1:60,2]) + geom_point()+geom_smooth(se=FALSE)+ xlab("psychology of a person (psychBits/life)") + theme_classic(base_size = 18) +ylab('Total Relative Umbilical Morph Points')
#rm(list = ls())
library(matlab)
library(reshape2)
library(ggplot2)
library(dplyr)
library(tidyr)
library(MLmetrics)
library(readr)
library(data.table)
library(jsonlite)
library(data.table)
library(knitr)
library(gridExtra)
#----- import subject data
#
sdat = fread('./RLWM_data/all_subject_n83_learn_test_data.csv', header = T) %>% t()
# sdat contains data fro 83 participants (columns),
# rows 1:12 learn accuracy set 3 ;
# rows 13:24 learn accuracy set 6 ;
# row 25 test set 3 accuracy ;
# row 26 test set 6 accuracy ;
#------ Modify subject data to 'weight' accuracy in test for 3 and 6 by repeating each 12x
sdat.temp <- rep(sdat[ , 25:26], 12) %>%
as.matrix() %>%
reshape(., 996,2) %>%
reshape(., 166,12)
sdat.mod  <- cbind(sdat[, 1:24],
sdat.temp[1:83,],
sdat.temp[84:166, ])
#----- import model data (has to be converted from JSON to data frames)
#--------- Integrated model
simsRL_LTM <- fromJSON('sim_data_all_params_integrated_model_100s_031620.JSON')
simsRL_LTM.set3learn <- simsRL_LTM$data$set3_learn %>%
unlist() %>%
as.matrix() %>%
reshape(., 12, 3125) %>%
t()
simsRL_LTM.set6learn <- simsRL_LTM$data$set6_learn %>%
unlist() %>%
as.matrix() %>%
reshape(., 12, 3125) %>%
t()
simsRL_LTM.s3s6test.temp <-
simsRL_LTM$data$set3_test %>%
cbind(., simsRL_LTM$data$set6_test) %>%
rep(., 12) %>%
as.matrix() %>%
reshape(., 37500, 2) %>%
reshape(., 6250, 12)
RL_LTM.sim.dat <- cbind(simsRL_LTM.set3learn,
simsRL_LTM.set6learn,
simsRL_LTM.s3s6test.temp[1:3125, ],
simsRL_LTM.s3s6test.temp[3126:6250, ] )
#--------- Reinforcement Learning Model
simsRL <- fromJSON('sim_data_all_params_RL_100s_031620.JSON')
simsRL.set3learn <- simsRL$data$set3_learn %>%
unlist() %>%
as.matrix() %>%
reshape(., 12, 25) %>%
t()
simsRL.set6learn <- simsRL$data$set6_learn %>%
unlist() %>%
as.matrix() %>%
reshape(., 12, 25) %>%
t()
simsRL.s3s6test.temp <-
simsRL$data$set3_test %>%
cbind(., simsRL$data$set6_test) %>%
rep(., 12) %>%
as.matrix() %>%
reshape(., 300, 2) %>%
reshape(., 50, 12)
RL.sim.dat <- cbind(simsRL.set3learn,
simsRL.set6learn,
simsRL.s3s6test.temp[1:25, ],
simsRL.s3s6test.temp[26:50, ] )
#--------- Longterm Memory/WM/Declarative model
simsLTM    <- fromJSON('03_mod_LTM_all.JSON')
simsLTM.set3learn <- simsLTM$data$set3_learn %>%
unlist() %>%
as.matrix() %>%
reshape(., 12, 125) %>%
t()
simsLTM.set6learn <- simsLTM$data$set6_learn %>%
unlist() %>%
as.matrix() %>%
reshape(., 12, 125) %>%
t()
simsLTM.s3s6test.temp <-  simsLTM$data$set3_test %>%
cbind(., simsLTM$data$set6_test) %>%
rep(., 12) %>%
as.matrix() %>%
reshape(., 1500, 2) %>%
reshape(., 250, 12)
LTM.sim.dat <- cbind(simsLTM.set3learn,
simsLTM.set6learn,
simsLTM.s3s6test.temp[1:125, ],
simsLTM.s3s6test.temp[126:250, ] )
sdat
sdat = fread('./RLWM_data/all_subject_n83_learn_test_data.csv', header = T) %>% t()
setwd('RLWM_ACTR/')
sdat = fread('./RLWM_data/all_subject_n83_learn_test_data.csv', header = T) %>% t()
#------ Modify subject data to 'weight' accuracy in test for 3 and 6 by repeating each 12x
sdat.temp <- rep(sdat[ , 25:26], 12) %>%
as.matrix() %>%
reshape(., 996,2) %>%
reshape(., 166,12)
sdat.mod  <- cbind(sdat[, 1:24],
sdat.temp[1:83,],
sdat.temp[84:166, ])
#----- import model data (has to be converted from JSON to data frames)
#--------- Integrated model
simsRL_LTM <- fromJSON('sim_data_all_params_integrated_model_100s_031620.JSON')
simsLTM    <- fromJSON('LTM_0629_sim_data_complete.JSON')#'03_mod_LTM_all.JSON')
simsLTM.set3learn <- simsLTM$data$set3_learn %>%
unlist() %>%
as.matrix() %>%
reshape(., 12, 125) %>%
t()
simsLTM.set6learn <- simsLTM$data$set6_learn %>%
unlist() %>%
as.matrix() %>%
reshape(., 12, 125) %>%
t()
simsLTM.s3s6test.temp <-  simsLTM$data$set3_test %>%
cbind(., simsLTM$data$set6_test) %>%
rep(., 12) %>%
as.matrix() %>%
reshape(., 1500, 2) %>%
reshape(., 250, 12)
LTM.sim.dat <- cbind(simsLTM.set3learn,
simsLTM.set6learn,
simsLTM.s3s6test.temp[1:125, ],
simsLTM.s3s6test.temp[126:250, ] )
simsLTM    <- fromJSON('LTM_0629_sim_data_complete.JSON')#'03_mod_LTM_all.JSON')
simsLTM
simsLTM$bll
simsLTM    <- fromJSON('LTM_0629_sim_data_complete.JSON')#'03_mod_LTM_all.JSON')
simsLTM$data
file.edit("./param_explorer/ui.R")
shiny::runApp('param_explorer')
fromJSON('LTM_simdata_0708.JSON')
h=fromJSON('LTM_simdata_0708.JSON')
hlp=fromJSON('LTM_simdata_0708.JSON')
hlp$data
runApp('param_explorer')
#rm(list = ls())
library(matlab)
library(reshape2)
library(ggplot2)
library(dplyr)
library(tidyr)
library(MLmetrics)
library(readr)
library(data.table)
library(jsonlite)
library(data.table)
library(knitr)
library(gridExtra)
sdat = fread('./RLWM_data/all_subject_n83_learn_test_data.csv', header = T) %>% t()
#------ Modify subject data to 'weight' accuracy in test for 3 and 6 by repeating each 12x
sdat.temp <- rep(sdat[ , 25:26], 12) %>%
as.matrix() %>%
reshape(., 996,2) %>%
reshape(., 166,12)
sdat.mod  <- cbind(sdat[, 1:24],
sdat.temp[1:83,],
sdat.temp[84:166, ])
simsLTM    <- fromJSON('LTM_simdata_0708.JSON')#'LTM_0629_sim_data_complete.JSON')#'03_mod_LTM_all.JSON')
simsLTM.set3learn <- simsLTM$data$set3_learn %>%
unlist() %>%
as.matrix() %>%
reshape(., 12, 125) %>%
t()
simsLTM.set6learn <- simsLTM$data$set6_learn %>%
unlist() %>%
as.matrix() %>%
reshape(., 12, 125) %>%
t()
simsLTM.s3s6test.temp <-  simsLTM$data$set3_test %>%
cbind(., simsLTM$data$set6_test) %>%
rep(., 12) %>%
as.matrix() %>%
reshape(., 1500, 2) %>%
reshape(., 250, 12)
LTM.sim.dat <- cbind(simsLTM.set3learn,
simsLTM.set6learn,
simsLTM.s3s6test.temp[1:125, ],
simsLTM.s3s6test.temp[126:250, ] )
LTM.sim.dat
sdat = fread('./RLWM_data/all_subject_n83_learn_test_data.csv', header = T) %>% t()
#------ Modify subject data to 'weight' accuracy in test for 3 and 6 by repeating each 12x
sdat.temp <- rep(sdat[ , 25:26], 12) %>%
as.matrix() %>%
reshape(., 996,2) %>%
reshape(., 166,12)
sdat.mod  <- cbind(sdat[, 1:24],
sdat.temp[1:83,],
sdat.temp[84:166, ])
simsLTM    <- fromJSON('LTM_simdata_0708.JSON')#'LTM_0629_sim_data_complete.JSON')#'03_mod_LTM_all.JSON')
simsLTM.set3learn <- simsLTM$data$set3_learn %>%
unlist() %>%
as.matrix() %>%
reshape(., 12, 125) %>%
t()
simsLTM.set6learn <- simsLTM$data$set6_learn %>%
unlist() %>%
as.matrix() %>%
reshape(., 12, 125) %>%
t()
simsLTM.s3s6test.temp <-  simsLTM$data$set3_test %>%
cbind(., simsLTM$data$set6_test) %>%
rep(., 12) %>%
as.matrix() %>%
reshape(., 1500, 2) %>%
reshape(., 250, 12)
LTM.sim.dat <- cbind(simsLTM.set3learn,
simsLTM.set6learn,
simsLTM.s3s6test.temp[1:125, ],
simsLTM.s3s6test.temp[126:250, ] )
LTM.sim.dat
plt.sim.ltm <- data.frame('accuracy'= c(LTM.sim.dat[,1:12] %>% t() %>% c(),
LTM.sim.dat[,13:24] %>% t() %>% c()),
'index'=rep(1:12,250),
'condition'=c(rep('set3', 12*125), rep('set6',12*125)))
plt.sim.ltm %>%
ggplot(aes(factor(index), accuracy, group=condition))+
geom_smooth(aes(color=condition, fill=condition), method = lm, formula = 'y~poly(x,2)', size=2) +
scale_colour_brewer( palette = "Set1") +
ylab('Accuracy') +
xlab('Number of stimulus presentations') +
xlim(as.character(1:12) )+
ylim(c(0.2,1))+
#scale_x_discrete(limits = 1:12,)+
ggtitle('LTM: mean performance across parameter sets') +
theme_classic(base_size = 20,base_family = 'Calibri')
plt.sim.ltm
plt.sim.ltm %>%
ggplot(aes(factor(index), accuracy, group=condition))+
geom_smooth(aes(color=condition, fill=condition), method = lm, formula = 'y~poly(x,2)', size=2) +
scale_colour_brewer( palette = "Set1") +
ylab('Accuracy') +
xlab('Number of stimulus presentations') +
xlim(as.character(1:12) )+
ylim(c(0.2,1))+
#scale_x_discrete(limits = 1:12,)+
ggtitle('LTM: mean performance across parameter sets') +
theme_classic(base_size = 20,base_family = 'Calibri')
plt.sim.ltm %>%
ggplot(aes(factor(index), accuracy, group=condition))+
geom_smooth(aes(color=condition, fill=condition), method = lm, formula = 'y~poly(x,2)', size=2) +
scale_colour_brewer( palette = "Set1") +
ylab('Accuracy') +
xlab('Number of stimulus presentations') +
xlim(as.character(1:12) )+
ylim(c(0.2,1))+
#scale_x_discrete(limits = 1:12,)+
ggtitle('LTM: mean performance across parameter sets') +
theme_classic(base_size = 20)
Subjects = nrow(sdat)
plot.sdat <- data.frame('set3' = reshape(t(sdat[,1:12]), Subjects * 12,1),
'set6' = t(sdat[,13:24]) %>% c(),
'iteration' = rep(1:12,Subjects))
all.p<- plot.sdat  %>% gather(key='study', value = 'acc', -iteration) %>%
ggplot(aes(iteration, acc, group=study)) +
geom_smooth(aes(color=study, fill=study), method = lm, formula = 'y~poly(x,2)', size=2) +
scale_colour_brewer( palette = "Set1") +
ylab('Accuracy') +
xlab('Number of stimulus presentations') +
xlim(as.character(1:12) )+
ylim(c(0.2,1))+
#scale_x_discrete(limits = 1:12,)+
ggtitle('Mean performance of all participants') +
theme_classic(base_size = 20,base_family = 'Calibri')
all.p
all.p<- plot.sdat  %>% gather(key='study', value = 'acc', -iteration) %>%
ggplot(aes(iteration, acc, group=study)) +
geom_smooth(aes(color=study, fill=study), method = lm, formula = 'y~poly(x,2)', size=2) +
scale_colour_brewer( palette = "Set1") +
ylab('Accuracy') +
xlab('Number of stimulus presentations') +
xlim(as.character(1:12) )+
ylim(c(0.2,1))+
#scale_x_discrete(limits = 1:12,)+
ggtitle('Mean performance of all participants') +
theme_classic(base_size = 20)
all.p
file.edit("model_analysis_3models.Rmd")
sdat = fread('./RLWM_data/all_subject_n83_learn_test_data.csv', header = T) %>% t()
install.packages("ggpubr")
simsLTM    <- fromJSON('LTM_simdata_0708.JSON#')#LTM_visual_activation_allparams_evals26.JSON')#('LTM_sim_data_3lvparams_050420.JSON')
simsLTM    <- fromJSON('LTM_simdata_0708.JSON')#LTM_visual_activation_allparams_evals26.JSON')#('LTM_sim_data_3lvparams_050420.JSON')
simsLTM.set3learn <- simsLTM$data$set3_learn %>%
unlist() %>%
as.matrix() %>%
reshape(., 12, nrow(simsLTM$data)) %>%
t()
simsLTM.set6learn <- simsLTM$data$set6_learn %>%
unlist() %>%
as.matrix() %>%
reshape(., 12, nrow(simsLTM$data)) %>%
t()
simsLTM.s3s6test.temp <-  simsLTM$data$set3_test %>%
cbind(., simsLTM$data$set6_test) %>%
rep(., 12) %>%
as.matrix() %>%
reshape(., 324, 2) %>%
reshape(., 54, 12) #54= nrow(sims.LTM) * 2
nrow(simsLTM$data)
nrow(simsLTM$data)*2
simsLTM.s3s6test.temp <-  simsLTM$data$set3_test %>%
cbind(., simsLTM$data$set6_test) %>%
rep(., 12) %>%
as.matrix() %>%
reshape(., 324, 2) %>%
reshape(., nrow(simsLTM$data)*2, 12) #54= nrow(sims.LTM) * 2
simsLTM.s3s6test.temp <-  simsLTM$data$set3_test %>%
cbind(., simsLTM$data$set6_test) %>%
rep(., 12) %>%
as.matrix() %>%
reshape(., 1500, 2) %>%
reshape(., nrow(simsLTM$data)*2, 12) #54= nrow(sims.LTM) * 2
LxTM.sim.dat <- cbind(simsLTM.set3learn,
simsLTM.set6learn,
simsLTM.s3s6test.temp[1:125, ],
simsLTM.s3s6test.temp[126:250, ],
simsLTM$data[,c('bll','alpha','egs','imag','ans')])  %>%
data.table()
LxTM.sim.dat
LTM.sim.dat <- cbind(simsLTM.set3learn,
simsLTM.set6learn,
simsLTM.s3s6test.temp[1:125, ],
simsLTM.s3s6test.temp[126:250, ],
simsLTM$data[,c('bll','alpha','egs','imag','ans')])  %>%
data.table()
file.edit('param_influence.R')
source('param_influence.R')
LTM.params       <- param.influence(LTM.sim.dat, 'LTM')
LTM.sim.dat[bll == .3]
LTM.sim.dat[imag == .3]
LTM.sim.dat[imag == .1]
LTM.sim.dat[imag == .1]
LTM.sim.dat[imag == .1,11:12]
LTM.sim.dat[imag == .1,25]
LTM.sim.dat[imag == .1,23:24]
LTM.sim.dat[imag == .1,37]
source('param_influence.R')
LTM.params       <- param.influence(LTM.sim.dat, 'LTM')
tmp.color = c('#ca0020','#f4a582' ,'#0571b0','#92c5de')
p2 <- LTM.params %>%
melt(value.name = 'accuracy',id.vars=c('parameter','level')) %>%
ggplot(aes(level, accuracy, color=variable)) +
geom_point()+
geom_line() +
ylim(c(.3,1)) +
facet_grid('parameter')+
theme_bw(base_size = 16, base_line_size = 1)+
scale_color_manual(values = tmp.color)+
theme(legend.position='none')
p2
