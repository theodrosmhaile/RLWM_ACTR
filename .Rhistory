ggplot(aes(model, value, color=cond.model, group=cond.model)) +
geom_point(position=position_dodge(width = 0.4),size=2) +
geom_errorbar(position=position_dodge(width = 0.4),aes(ymax=value+se, ymin=value-se), size=1,width=.75) +
theme_pubclean(base_size = 18) +
ggtitle("Change from training to test: test - learn")+
scale_color_brewer(palette = "Paired") +
theme(legend.position = 'none')+
ylab("mean difference")
learnTestDiff %>%
lm(value ~ setSize * type * model, data=.) %>%
anova() %>%
broom::tidy()
learnTestDiff %>%
lm(value ~ setSize * type * model, data=.) %>%
anova() %>%
broom::tidy() %>%
kable()
filter(model!='RL') %>%
learnTestDiff %>%
filter(model!='RL') %>%
lm(value ~ setSize * type * model, data=.) %>%
anova() %>%
broom::tidy() %>%
kable(caption = '')
learnTestDiff %>%
filter(model!='RL') %>%
lm(value ~ setSize * type * model, data=.) %>%
anova() %>%
broom::tidy() %>%
kable(caption = '')
learnTestDiff %>%
filter(model!='RL') %>%
lm(value ~ setSize * type * model, data=.) %>%
anova() %>%
broom::tidy() %>%
kable(caption = '(2)set-size x (2)type(modelorBehav data) x 3(model) anova. RL excluded.')
param.spread <-
p.behav.model %>%
select('alpha','egs','bll','imag','ans','bias') %>%
reshape2::melt(value.name = 'unscaled.vals')  %>%
data.frame('scaled.vals' =p.behav.model %>% select('alpha','egs','bll','imag','ans','bias') %>% scale() %>% reshape2::melt()  %>% select(value) ) %>%
dplyr::group_by(unscaled.vals, variable, value) %>%
tally()
param.spread %>%
ungroup() %>%
filter(!is.na(unscaled.vals)) %>%
ggplot(aes(x=value, variable,size=n, color=variable)) +
geom_point(alpha=.35)+
#  facet_wrap(vars(model)) +
geom_text(aes(label=round(unscaled.vals,2), size=2,color='blue'), check_overlap = T)+
geom_text(aes(label=n, size=2,color='red'), check_overlap = T, nudge_y = .3)+
theme_classic2(base_size = 24)+
theme(legend.position = 'top')+
scale_size(range = c(1, 30), name='count', breaks = c(5,10,15,20)) +
# theme(legend.position='top') +
ylab('parameter')+
xlab('scaled value')
param.spread %>%
ungroup() %>%
filter(!is.na(unscaled.vals)) %>%
ggplot(aes(x=value, variable,size=n, color=variable)) +
geom_point(alpha=.35)+
#  facet_wrap(vars(model)) +
geom_text(aes(label=round(unscaled.vals,2), size=2,color='blue'), check_overlap = T)+
geom_text(aes(label=n, size=2,color='red'), check_overlap = T, nudge_y = .3)+
theme_classic2(base_size = 24)+
theme(legend.position = 'top')+
scale_size(range = c(1, 30), name='count', breaks = c(5,10,15,20)) +
theme(legend.position='none') +
ylab('parameter')+
xlab('scaled value')
param.spread %>%
ungroup() %>%
filter(!is.na(unscaled.vals)) %>%
ggplot(aes(x=value, variable,size=n, fill=variable)) +
geom_density_ridges2(stat = 'binline', bins=20)
param.spread %>%
ungroup() %>%
filter(!is.na(unscaled.vals)) %>%
ggplot(aes(x=variable, value,size=n, fill=variable))+
geom_boxplot()
param.spread %>%
ungroup() %>%
dplyr::group_by(variable) %>%
filter(!is.na(value)) %>%
dplyr::summarise(mean=mean(unscaled.vals, na.rm = T),
median=median(unscaled.vals, na.rm=T),
mean_c=mean(n, na.rm = T),
median_c=median(n, na.rm = T))
param.spread %>%
ungroup() %>%
filter(!is.na(unscaled.vals)) %>%
ggplot(aes(x=value, variable,size=n, color=variable)) +
geom_point(alpha=.35)+
#  facet_wrap(vars(model)) +
geom_text(aes(label=round(unscaled.vals,2), size=2,color='blue'), check_overlap = T)+
geom_text(aes(label=n, size=2,color='red'), check_overlap = T, nudge_y = .3)+
theme_classic2(base_size = 24)+
theme(legend.position = 'top')+
scale_size(range = c(1, 30), name='count', breaks = c(5,10,15,20)) +
theme(legend.position='none') +
ylab('parameter')+
xlab('scaled value') +
ggtitle('distribution of param values. Blue numbers are counts')
#   filter(!is.na(unscaled.vals)) %>%
# ggplot(aes(x=value, variable,size=n, fill=variable)) +
#   geom_density_ridges2(stat = 'binline', bins=20)
#
#  param.spread %>%
#    ungroup() %>%
#   filter(!is.na(unscaled.vals)) %>%
# ggplot(aes(x=variable, value,size=n, fill=variable))+
#    geom_boxplot()
#
param.spread %>%
ungroup() %>%
dplyr::group_by(variable) %>%
filter(!is.na(value)) %>%
dplyr::summarise(mean=mean(unscaled.vals, na.rm = T),
median=median(unscaled.vals, na.rm=T),
mean_c=mean(n, na.rm = T),
median_c=median(n, na.rm = T))
temp4join1 <-
fit.lr %>%
dplyr::filter(estimate.type=='slope') %>%
reshape2::dcast(subjects  + model ~ setSize + estimate.type + type, value.var = 'estimate') %>%
select(-model, -subjects) %>%
scale() %>%
data.frame(., 'subjects'=p.behav.model$subjects, 'model'=p.behav.model$model)
all.cors.byModel <-
molt.param.out %>%
filter(model!='RL', type=='behav') %>%
group_by(model, condition, params, setSize) %>%
dplyr::summarise(cor.pearson=cor(param_vals,measure_vals),
cor.spearman=cor(param_vals,measure_vals, method = 'spearman')
)
all.cors.byModel %>%
filter(is.na(cor.pearson)==F) %>%
ggplot(aes(params, condition, fill=cor.spearman)) +
geom_tile() +
facet_wrap(vars(setSize, model))+
theme_pubclean(base_size = 18) +
geom_text(aes(label=round(cor.spearman,2), size=.5), show.legend = F)+
scale_fill_gradient2(limits=c(-1,1),
low='#2b83ba',
high = '#d7191c',
mid = 'white',
midpoint = 0,
guide='colorbar',
aesthetics = 'fill',
breaks= c(-1,-.5,-.25,0,.25,.5,1)
) +
theme(legend.position = 'right') +
xlab('parameters')
p.param.outcomes %>%
filter(model=='LTM', subjects!=15012 & subjects!=6207 & subjects!=28307) %>%
lm( s3.13.behav ~ bll+ ans +imag,data=.) %>%
summary()
#Differences in RL use in s3 and s6
simsRL_LTMpipe$data %>%
select(strtg3,strtg6) %>%
melt() %>%
ggplot(aes(y=value,group=variable, fill=variable)) +
geom_boxplot()
simsRL_LTMpipe$data %>%
select(strtg3,strtg6) %>%
melt() %>%
lm(value ~ variable, data = .) %>% summary()
linear_param <-
p.behav.model %>%
select('alpha','egs','bll','imag','ans','bias') %>%
scale(center = F) %>%
data.frame(subjects=p.behav.model$subjects)%>%
dplyr::group_by(subjects,alpha,egs,imag,bll,ans) %>%
dplyr::summarise(newParam= sum( c(alpha,imag,ans,egs,bll), na.rm = T)) %>%
data.frame(learn=p.behav.model$s3.12.behav)
param.cluster <-
p.behav.model %>%
filter(model=='LTM') %>%
select('bll','imag','ans' ) %>%
scale(center = F) %>%
kmeans(centers = 4, iter.max = 12)
p.behav.model  %>%
filter(model!='RL') %>%
select('s3.13.behav','s6.13.behav' ) %>% #"s3.13.model", "s6.13.model"
data.frame('clu'=as.factor(param.cluster$cluster)) %>%
reshape2::melt(id.vars='clu') %>%
summarySE(measurevar = 'value', groupvars = c('clu', 'variable')) %>%
ggplot(aes(clu,value, group=variable,fill=variable))+
geom_bar(stat='identity', position = position_dodge(width = .75)) +
geom_errorbar( aes(y=value, ymin=value-se, ymax=value+se), position = position_dodge(width = .75))
p.behav.model  %>%
filter(model!='RL') %>%
select('s3.13.behav','s6.13.behav' ) %>% #"s3.13.model", "s6.13.model"
data.frame('clu'=as.factor(param.cluster$cluster)) %>%
reshape2::melt(id.vars='clu') %>%
summarySE(measurevar = 'value', groupvars = c('clu', 'variable')) %>%
ggplot(aes(clu,value, group=variable,fill=variable))+
geom_bar(stat='identity', position = position_dodge(width = .75)) +
geom_errorbar( aes(y=value, ymin=value-se, ymax=value+se), position = position_dodge(width = .75))
p.behav.model  %>%
filter(model=='LTM') %>%
select('s3.13.behav','s6.13.behav' ) %>% #"s3.13.model", "s6.13.model"
data.frame('clu'=as.factor(param.cluster$cluster)) %>%
reshape2::melt(id.vars='clu') %>%
summarySE(measurevar = 'value', groupvars = c('clu', 'variable')) %>%
ggplot(aes(clu,value, group=variable,fill=variable))+
geom_bar(stat='identity', position = position_dodge(width = .75)) +
geom_errorbar( aes(y=value, ymin=value-se, ymax=value+se), position = position_dodge(width = .75))
p.behav.model  %>%
filter(model=='LTM') %>%
select('s3.12.behav','s6.12.behav' ) %>% #"s3.13.model", "s6.13.model"
data.frame('clu'=as.factor(param.cluster$cluster)) %>%
reshape2::melt(id.vars='clu') %>%
summarySE(measurevar = 'value', groupvars = c('clu', 'variable')) %>%
ggplot(aes(clu,value, group=variable,fill=variable))+
geom_bar(stat='identity', position = position_dodge(width = .75)) +
geom_errorbar( aes(y=value, ymin=value-se, ymax=value+se), position = position_dodge(width = .75))
3
p.behav.model  %>%
filter(model=='LTM') %>%
select('s3.13.behav','s6.13.behav' ) %>% #"s3.13.model", "s6.13.model"
data.frame('clu'=as.factor(param.cluster$cluster)) %>%
reshape2::melt(id.vars='clu') %>%
summarySE(measurevar = 'value', groupvars = c('clu', 'variable')) %>%
ggplot(aes(clu,value, group=variable,fill=variable))+
geom_bar(stat='identity', position = position_dodge(width = .75)) +
geom_errorbar( aes(y=value, ymin=value-se, ymax=value+se), position = position_dodge(width = .75))
temp4join1 <-
fit.lr %>%
dplyr::filter(estimate.type=='slope') %>%
reshape2::dcast(subjects  + model ~ setSize + estimate.type + type, value.var = 'estimate') %>%
select(-model, -subjects) %>%
scale() %>%
data.frame(., 'subjects'=p.behav.model$subjects, 'model'=p.behav.model$model)
temp4join2 <-
learnTestDiff %>%
select(-model) %>%
data.frame('param'='TestForgetting') %>%
reshape2::dcast(subjects  ~ setSize +param +type, value.var = 'value')
temp4join2 <-
learnTestDiff %>%
select(-model) %>%
data.frame('param'='TestForgetting') %>%
reshape2::dcast(subjects  ~ setSize +param +type, value.var = 'value')
temp4join3 <-
s3s6Diff %>%
select(-model) %>%
data.frame('param'='s3s6_learnDiff') %>%
reshape2::dcast(subjects ~ param + type, value.var = 'learnDiff')
main4join <-
p.behav.model %>%
select(s3.12.behav, s3.12.model, s6.12.behav, s6.12.model,s3.13.behav,
s3.13.model, s6.13.behav, s6.13.model) %>%
scale() %>%
data.frame( p.behav.model %>%
select('alpha','egs','bll','imag','ans','bias') %>%
scale(),
'subjects'= p.behav.model$subjects
)
p.param.outcomes <-
merge(main4join,
temp4join1, by = c("subjects"), sort=FALSE) %>%
merge(temp4join2, by = c("subjects"), sort = FALSE ) %>%
merge(temp4join3, by = c("subjects"), sort = FALSE )
molt.param.out <- p.param.outcomes %>%
reshape2::melt(id.vars=c('model','subjects','alpha','egs','bll','imag','ans','bias'),
variable.name='measures', value.name="measure_vals")  %>%
reshape2::melt(id.vars=c('model','subjects', 'measures','measure_vals'),
variable.name='params',value.name='param_vals') %>%
separate("measures", into = c('setSize', "condition","type"), remove = FALSE, convert = TRUE)
all_dat_cors <-
molt.param.out %>%
filter( type=='behav') %>%
dplyr::group_by(condition, setSize, params) %>%
dplyr::summarise(cor.pearson=cor(param_vals,measure_vals, use="complete.obs"),
cor.spearman=cor(param_vals,measure_vals, use="complete.obs", method = 'spearman')
)
all_dat_cors %>%
ggplot(aes(params, condition, fill=cor.spearman)) +
geom_tile() +
geom_text(aes(label=round(cor.spearman,2), size=.5), show.legend = F)+
facet_wrap(vars(setSize))+
theme_pubclean(base_size = 18) +
scale_fill_gradient2(limits=c(-1,1),
low='#2b83ba',
high = '#d7191c',
mid = 'white',
midpoint = 0,
guide='colorbar',
aesthetics = 'fill',
breaks= c(-1,-.5,0,.5,1)
) +
# scale_fill_distiller(palette = 'Spectral', guide='colorbar') +
#   theme(legend.position = 'right')
# all_dat_cors %>%
#   ggplot(aes(params, condition, fill=cor.pearson)) +
#   geom_tile() +
#   geom_text(aes(label=round(cor.pearson,2), size=.5), show.legend = F)+
#    facet_wrap(vars(setSize))+
#   theme_pubclean(base_size = 18) +
#     scale_fill_gradient2(limits=c(-0.7,0.7),
#                          low='#2b83ba',
#                           high = '#d7191c',
#                          mid = 'white',
#                          midpoint = 0,
#                          guide='colorbar',
#                          aesthetics = 'fill',
#                          breaks= c(-.5,-.25,0,.25,.5)
#     ) +
#  # scale_fill_distiller(palette = 'Spectral', guide='colorbar') +
#   theme(legend.position = 'right') +
#   xlab('parameters')
#
# molt.param.out %>%
#   filter(type=='model', condition=='13', setSize=='s3', params=='bias') %>%
#   select(param_vals, measure_vals) %>%
#   #dplyr::group_by(param_vals) %>%
#   #dplyr::summarise(median(measure_vals)) %>%
#   #plot()
#   cor(use="complete.obs",method = 'spearman')
```
all_dat_cors %>%
ggplot(aes(params, condition, fill=cor.spearman)) +
geom_tile() +
geom_text(aes(label=round(cor.spearman,2), size=.5), show.legend = F)+
facet_wrap(vars(setSize))+
theme_pubclean(base_size = 18) +
scale_fill_gradient2(limits=c(-1,1),
low='#2b83ba',
high = '#d7191c',
mid = 'white',
midpoint = 0,
guide='colorbar',
aesthetics = 'fill',
breaks= c(-1,-.5,0,.5,1)
) +
# scale_fill_distiller(palette = 'Spectral', guide='colorbar') +
#   theme(legend.position = 'right')
# all_dat_cors %>%
#   ggplot(aes(params, condition, fill=cor.pearson)) +
#   geom_tile() +
#   geom_text(aes(label=round(cor.pearson,2), size=.5), show.legend = F)+
#    facet_wrap(vars(setSize))+
#   theme_pubclean(base_size = 18) +
#     scale_fill_gradient2(limits=c(-0.7,0.7),
#                          low='#2b83ba',
#                           high = '#d7191c',
#                          mid = 'white',
#                          midpoint = 0,
#                          guide='colorbar',
#                          aesthetics = 'fill',
#                          breaks= c(-.5,-.25,0,.25,.5)
#     ) +
#  # scale_fill_distiller(palette = 'Spectral', guide='colorbar') +
#   theme(legend.position = 'right') +
#   xlab('parameters')
#
# molt.param.out %>%
#   filter(type=='model', condition=='13', setSize=='s3', params=='bias') %>%
#   select(param_vals, measure_vals) %>%
#   #dplyr::group_by(param_vals) %>%
#   #dplyr::summarise(median(measure_vals)) %>%
#   #plot()
#   cor(use="complete.obs",method = 'spearman')
```
all_dat_cors %>%
ggplot(aes(params, condition, fill=cor.pearson)) +
geom_tile() +
geom_text(aes(label=round(cor.pearson,2), size=.5), show.legend = F)+
facet_wrap(vars(setSize))+
theme_pubclean(base_size = 18) +
scale_fill_gradient2(limits=c(-0.7,0.7),
low='#2b83ba',
high = '#d7191c',
mid = 'white',
midpoint = 0,
guide='colorbar',
aesthetics = 'fill',
breaks= c(-.5,-.25,0,.25,.5)
) +
# scale_fill_distiller(palette = 'Spectral', guide='colorbar') +
theme(legend.position = 'right') +
xlab('parameters')
all.cors.byModel %>%
filter(is.na(cor.pearson)==F) %>%
ggplot(aes(params, condition, fill=cor.spearman)) +
geom_tile() +
facet_wrap(vars(setSize, model))+
theme_pubclean(base_size = 18) +
geom_text(aes(label=round(cor.spearman,2), size=.5), show.legend = F)+
scale_fill_gradient2(limits=c(-1,1),
low='#2b83ba',
high = '#d7191c',
mid = 'white',
midpoint = 0,
guide='colorbar',
aesthetics = 'fill',
breaks= c(-1,-.5,-.25,0,.25,.5,1)
) +
theme(legend.position = 'right') +
xlab('parameters')
all_dat_cors %>%
ggplot(aes(params, condition, fill=cor.spearman)) +
geom_tile() +
geom_text(aes(label=round(cor.spearman,2), size=.5), show.legend = F)+
facet_wrap(vars(setSize))+
theme_pubclean(base_size = 18) +
scale_fill_gradient2(limits=c(-1,1),
low='#2b83ba',
high = '#d7191c',
mid = 'white',
midpoint = 0,
guide='colorbar',
aesthetics = 'fill',
breaks= c(-1,-.5,0,.5,1)
) +
scale_fill_distiller(palette = 'Spectral', guide='colorbar') +
theme(legend.position = 'right')
all_dat_cors %>%
ggplot(aes(params, condition, fill=cor.spearman)) +
geom_tile() +
geom_text(aes(label=round(cor.spearman,2), size=.5), show.legend = F)+
facet_wrap(vars(setSize))+
theme_pubclean(base_size = 18) +
scale_fill_gradient2(limits=c(-1,1),
low='#2b83ba',
high = '#d7191c',
mid = 'white',
midpoint = 0,
guide='colorbar',
aesthetics = 'fill',
breaks= c(-1,-.5,0,.5,1)
) +
# scale_fill_distiller(palette = 'Spectral', guide='colorbar') +
theme(legend.position = 'right')
molt.param.out %>%
filter( setSize=='s3', condition==12) %>%
ggplot(aes(param_vals, measure_vals, group=condition, color=condition)) +
geom_point() +
geom_smooth(method = 'lm')+
facet_wrap(vars(model, params))
p.param.outcomes %>%
select(-model,-subjects,-ends_with('model')) %>%
GGally::ggpairs() +
theme_pubclean() + theme(axis.text.y = element_text( angle=45))
molt.param.out <- p.param.outcomes %>%
reshape2::melt(id.vars=c('model','subjects','alpha','egs','bll','imag','ans','bias'),
variable.name='measures', value.name="measure_vals")  %>%
reshape2::melt(id.vars=c('model','subjects', 'measures','measure_vals'),
variable.name='params',value.name='param_vals') %>%
separate("measures", into = c('setSize', "condition","type"), remove = FALSE, convert = TRUE)
#   filter(!is.na(unscaled.vals)) %>%
# ggplot(aes(x=value, variable,size=n, fill=variable)) +
#   geom_density_ridges2(stat = 'binline', bins=20)
#
#  param.spread %>%
#    ungroup() %>%
#   filter(!is.na(unscaled.vals)) %>%
# ggplot(aes(x=variable, value,size=n, fill=variable))+
#    geom_boxplot()
#
param.spread %>%
ungroup() %>%
dplyr::group_by(variable) %>%
filter(!is.na(value)) %>%
dplyr::summarise(mean=mean(unscaled.vals, na.rm = T),
median=median(unscaled.vals, na.rm=T),
mean_c=mean(n, na.rm = T),
median_c=median(n, na.rm = T))
param.spread %>%
ungroup() %>%
dplyr::group_by(variable) %>%
filter(!is.na(value))
param.spread %>% names
param.spread %>% filter(variable=='bias')
#   filter(!is.na(unscaled.vals)) %>%
# ggplot(aes(x=value, variable,size=n, fill=variable)) +
#   geom_density_ridges2(stat = 'binline', bins=20)
#
#  param.spread %>%
#    ungroup() %>%
#   filter(!is.na(unscaled.vals)) %>%
# ggplot(aes(x=variable, value,size=n, fill=variable))+
#    geom_boxplot()
#
param.spread %>%
ungroup() %>%
dplyr::group_by(variable) %>%
filter(!is.na(value)) %>%
dplyr::summarise(mean=mean(unscaled.vals, na.rm = T),
median=median(unscaled.vals, na.rm=T),
#  mean_c=mean(n, na.rm = T),
#   median_c=median
) %>% kable(caption='mean and medians of parameter values')
table_acc=read.csv('/Volumes/GoogleDrive/My Drive/CCDL Shared/Shared/Victor/stim_response_analysis/table_accuracy_long.csv')
table_acc %>% head()
table_acc %>% lm(accuracy ~ phase*setSize*condition, data = .)
table_acc %>% lm(accuracy ~ phase*setSize*condition, data = .) %>% anova()
table_acc %>% lm(arc_acc ~ phase*setSize*condition, data = .) %>% anova()
table_acc %>% kruskal.test(arc_acc ~ phase*setSize*condition, data = .)
table_acc %>% kruskal.test(arc_acc ~ condition, data = .)
table_acc %>% kruskal.test(arc_acc ~ phase, data = .)
table_acc %>% kruskal.test(arc_acc ~ setSize, data = .)
table_acc %>% filter(setSize=='3') %>%  kruskal.test(arc_acc ~ condition, data = .)
table_acc %>% filter(setSize=='6') %>%  kruskal.test(arc_acc ~ condition, data = .)
table_acc %>% kruskal.test(accuracy ~ condition, data = .)
table_acc %>% filter(setSize=='6') %>%  kruskal.test(accuracy ~ condition, data = .)
table_acc %>% filter(setSize=='3') %>%  kruskal.test(accuracy ~ condition, data = .)
table_acc %>% filter(phase=='Learning') %>%  kruskal.test(accuracy ~ condition, data = .)
table_acc %>% filter(phase=='test') %>%  kruskal.test(accuracy ~ condition, data = .)
table_acc %>% filter(phase!='Learning') %>%  kruskal.test(accuracy ~ condition, data = .)
