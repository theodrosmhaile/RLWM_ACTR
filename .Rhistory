se=sd(mean.acc)/sqrt(n)) %>%
ggplot(aes(x=stable, y=acc.mean, color=condition)) +
geom_point(size=4, alpha=.7) +
geom_errorbar(aes(ymin=acc.mean-se, ymax=acc.mean+se), size=.19, width=.2)+
facet_wrap(vars(phase, half, model)) +
scale_color_brewer(palette = 'Set2')
switch.setSize <-
melted.p.behav.model %>%
filter(type=='behavioral',iteration == c(8,9,10,11,12))  %>%
unique() %>%
dplyr::group_by(half, subjects, condition, phase,model ) %>%
dplyr::summarise(mean.acc = mean(accuracy),
n = length(accuracy),
se= sd(accuracy)/sqrt(n)) %>%
inner_join(index_search %>%
separate(name, into = c('half', 'setSize')) %>%
separate(condition, into = c('condition', 'phase')) %>%
pivot_wider(id_cols = c(subjects,half, phase), names_from = condition, values_from = model) %>%
dplyr::mutate(stable = set3==set6) %>%
pivot_longer(cols = c(set3, set6), names_to = 'condition', values_to = 'model')
,by=c('subjects','half','condition','model', 'phase'))
switch.setSize
switch.setSize %>%
dplyr::group_by(stable,half, condition, phase, model ) %>%
dplyr::summarise(acc.mean = mean(mean.acc),
n=length(mean.acc),
se=sd(mean.acc)/sqrt(n)) %>%
ggplot(aes(x=stable, y=acc.mean, color=condition)) +
geom_point(size=4, alpha=.7) +
geom_errorbar(aes(ymin=acc.mean-se, ymax=acc.mean+se), size=.19, width=.2)+
facet_wrap(vars(phase, half, model)) +
scale_color_brewer(palette = 'Set2')
switch.setSize %>%
filter(phase=='learn') %>%
lm(mean ~ stable *half * condition * model)
switch.setSize %>%
filter(phase=='learn') %>%
lm(mean ~ stable *half * condition * model, data = .)
switch.setSize %>%
filter(phase=='learn') %>%
lm(mean.acc ~ stable *half * condition * model, data = .)
switch.setSize %>%
filter(phase=='learn') %>%
lm(mean.acc ~ stable *half * condition * model, data = .) %>%
anova()
switch.setSize %>%
filter(phase=='learn') %>%
lm(mean.acc ~ stable *half * condition * model, data = .) %>%
anova() %>%
broom::tidy()
switch.setSize %>%
filter(phase=='learn') %>%
lm(mean.acc ~ stable *half * condition * model, data = .) %>%
anova() %>%
broom::tidy() %>%
knitr::kable()
index_search %>%
separate(name, into = c('half', 'setSize')) %>%
separate(condition, into = c('condition', 'phase')) %>%
pivot_wider(id_cols = c(subjects,condition, phase), names_from = half, values_from = model) %>%
dplyr::mutate(stable = half1==half2)
switch.half <-
melted.p.behav.model %>%
filter(type=='behavioral',iteration == c(8,9,10,11,12))  %>%
unique() %>%
dplyr::group_by(half, subjects, condition, phase,model ) %>%
dplyr::summarise(mean.acc = mean(accuracy),
n = length(accuracy),
se= sd(accuracy)/sqrt(n)) %>%
inner_join(index_search %>%
separate(name, into = c('half', 'setSize')) %>%
separate(condition, into = c('condition', 'phase')) %>%
pivot_wider(id_cols = c(subjects,condition, phase), names_from = half, values_from = model) %>%
dplyr::mutate(stable = half1==half2) %>%
pivot_longer(cols = c(half1, half2), names_to = 'half', values_to = 'model')
,by=c('subjects','half','condition','model', 'phase'))
switch.half
switch.half <-
melted.p.behav.model %>%
filter(type=='behavioral',iteration == c(8,9,10,11,12))  %>%
unique() %>%
dplyr::group_by(half, subjects, condition, phase,model ) %>%
dplyr::summarise(mean.acc = mean(accuracy),
n = length(accuracy),
se= sd(accuracy)/sqrt(n)) %>%
inner_join(index_search %>%
separate(name, into = c('half', 'setSize')) %>%
separate(condition, into = c('condition', 'phase')) %>%
pivot_wider(id_cols = c(subjects,condition, phase), names_from = half, values_from = model) %>%
dplyr::mutate(stable = half1==half2) %>%
pivot_longer(cols = c(half1, half2), names_to = 'half', values_to = 'model')
,by=c('subjects','half','condition','model', 'phase'))
switch.half %>%
dplyr::group_by(stable,half, condition, phase, model ) %>%
dplyr::summarise(acc.mean = mean(mean.acc),
n=length(mean.acc),
se=sd(mean.acc)/sqrt(n)) %>%
ggplot(aes(x=stable, y=acc.mean, color=half)) +
geom_point(size=4, alpha=.7) +
geom_errorbar(aes(ymin=acc.mean-se, ymax=acc.mean+se), size=.19, width=.2)+
facet_wrap(vars(phase, condition, model)) +
scale_color_brewer(palette = 'Set2')
switch.half %>%
filter(phase=='learn') %>%
lm(mean.acc ~ stable *half * condition * model, data = .) %>%
anova() %>%
broom::tidy() %>%
knitr::kable()
library(tidyverse)
library(jsonlite)
meta_sub_dat <- read_json('./processed_wmo/meta_learning_wmo_data_122020.JSON')
meta_sub_dat
meta_sub_dat$data
meta_sub_dat <- read_json('./processed_wmo/meta_learning_wmo_data_122020.JSON')$data
meta_sub_dat
meta_sub_dat <- read_json('./processed_wmo/meta_learning_wmo_data_122020.JSON')
meta_sub_dat$data[1]
meta_sub_dat <- fromJSON('./processed_wmo/meta_learning_wmo_data_122020.JSON')data
meta_sub_dat <- fromJSON('./processed_wmo/meta_learning_wmo_data_122020.JSON')$data
meta_sub_dat
devtools::install_github("michaelgaunt404/replicaToolkitR")
library(replicaToolkitR)
data("aggregated_network_links")
aggregated_network_links
data("replica_trip_origin_links_gpkg")
replica_trip_origin_links_gpkg
View(replica_trip_origin_links_gpkg)
str(replica_trip_origin_links_gpkg)
data("table_agg_by_link_subset_limited")
table_agg_by_link_subset_limited
install.packages("sf")
library(sf)
str(replica_trip_origin_links_gpkg)
replica_trip_origin_links_gpkg
file.edi('sensitivity_test_for_RMSE_model_fitting.Rmd')
file.edit('sensitivity_test_for_RMSE_model_fitting.Rmd')
sim_dat.RL <- fromJSON('./sensitivity_analysis/RL_sims/RL_sim_data_frac_25_0_to_25')$data %>%
dplyr::mutate(bias = 0)
rm(list = ls())
library(MASS)
library(ggpubr)
library(matlab)
library(MLmetrics)
library(jsonlite)
library(knitr)
library(Rmisc)
library(magrittr)
library(data.table)
library(skimr)
library(tidyverse)
knitr::opts_chunk$set(
comment = "#>", echo = FALSE, warning = FALSE,
message = FALSE, dpi = 300
)
theme_set(theme_pubclean(base_size = 12))
sim_dat.RL <- fromJSON('./sensitivity_analysis/RL_sims/RL_sim_data_frac_25_0_to_25')$data %>%
dplyr::mutate(bias = 0)
sim_dat.RL
RL.model <- fromJSON('./simulated_data/RL_model/RL_sim_data_07_12_2022.JSON')$data %>%
dplyr::mutate(bias = 0)
RL.model
sim.learn = sim_dat.RL$set3_learn %>%
reduce(rbind) %>%
cbind(sim_dat.RL$set6_learn %>% reduce(rbind))
sim.learn
#sim.learn <-
sim_dat.RL$set3_learn %>%
reduce(rbind) %>%
mutate('sim_id'=paste0('S_',1:25))
sim_dat.RL$set3_learn %>%
reduce(rbind)
#sim.learn <-
sim_dat.RL$set3_learn %>%
reduce(rbind) %>% as_tibble() %>%
mutate('sim_id'=paste0('S_',1:25))
#sim.learn <-
sim_dat.RL$set3_learn %>%
reduce(rbind) %>% colnames(paste0('s3_',c(1:12)))
paste0('s3_',c(1:12))
paste0('s3_',c(1:12))
#sim.learn <-
sim_dat.RL$set3_learn %>%
reduce(rbind) %>% colnames(.)=paste0('s3_',c(1:12))
colnames(sim_dat.RL$set3_learn %>%
reduce(rbind))=paste0('s3_',c(1:12))
colnames(sim_dat.RL$set3_learn %>%
reduce(rbind) ) = paste0('s3_',c(1:12))
colnames(sim_dat.RL$set3_learn ) = paste0('s3_',c(1:12))
colnames(sim_dat.RL$set3_learn %>% as.data.frame()) = paste0('s3_',c(1:12))
sim_dat.RL$set3_learn %>% as.data.frame()
sim_dat.RL$set3_learn %>% as_tibble()
sim_dat.RL$set3_learn %>% as_tibble(.name_repair = T)
sim_dat.RL$set3_learn %>% as_tibble(.name_repair =paste0('s3_',c(1:12))
)
sim_dat.RL$set3_learn %>% as_tibble(.name_repair =('s3_'))
?vctrs::vec_as_names`
?vctrs::vec_as_names
?vctrs::vec_as_names
sim_dat.RL$set3_learn %>% as_tibble(.name_repair ='unique')
sim_dat.RL$set3_learn %>% reduce(rbind)
sim_dat.RL$set3_learn %>% reduce(rbind) %>% as_tibble()
colnames((sim_dat.RL$set3_learn %>% reduce(rbind) %>% as_tibble())=paste0('s3_',c(1:12))
h=sim_dat.RL$set3_learn %>% reduce(rbind) %>% as_tibble()
colnames(h)
colnames(h)=paste0('s3_',c(1:12))
h
sim.learn <-  sim_dat.RL$set3_learn %>%
reduce(rbind) %>%
as_tibble()
colnames(sim.learn) = paste0('s3_',c(1:12))
sim.learn.3 <-  sim_dat.RL$set3_learn %>%
reduce(rbind) %>%
as_tibble()
sim.learn.3
sim.learn.3
colnames(sim.learn.3) = paste0('s3_',c(1:12))
sim.learn.3
sim.learn.3 %>%
mutate('sim_id'=paste0('S_',1:25))
sim.learn.3 %>%
mutate('sim_id'=paste0('S_',1:25),
condition='set3')
sim.learn.6 <- sim_dat.RL$set6_learn %>%
reduce(rbind) %>%
as_tibble()
colnames(sim.learn.6) = paste0('s6_',c(1:12))
sim.learn.6
sim.learn.6 %<>%
mutate('sim_id'=paste0('S_',1:25),
condition='set3')
sim.learn.3 %>%
pivot_longer(cols = c(sim_id, condition) , names_to = 'iteration', values_to = 'accuracy' )
sim.learn.6
sim.learn.3 %<>%
mutate('sim_id'=paste0('S_',1:25),
condition='set3')
sim.learn.3 %>%
pivot_longer(cols = c(sim_id, condition) , names_to = 'iteration', values_to = 'accuracy' )
sim.learn.3 %>%
pivot_longer(cols = c(-sim_id, -condition) , names_to = 'iteration', values_to = 'accuracy' )
sim.learn.3 %>%
pivot_longer(cols = c(-sim_id, -condition) , names_to = 'iteration', values_to = 'accuracy' ) %>%
rbind(sim.learn.6 %>%
pivot_longer(cols = c(-sim_id, -condition) , names_to = 'iteration', values_to = 'accuracy' ) )
RL.sim.dat <-
sim.learn.3 %>%
pivot_longer(cols = c(-sim_id, -condition) , names_to = 'iteration', values_to = 'accuracy' ) %>%
rbind(sim.learn.6 %>%
pivot_longer(cols = c(-sim_id, -condition) , names_to = 'iteration', values_to = 'accuracy' ) )
RL.sim.dat %>%
ggplot(aes(x=iteration, y=accuracy, group=conditon, color=condition)) +
geom_point() + geom_line() + facet_wrap(vars(sim_id))
RL.sim.dat %>%
ggplot(aes(x=iteration, y=accuracy, group=condition, color=condition)) +
geom_point() + geom_line() + facet_wrap(vars(sim_id))
View(RL.sim.dat)
sim.learn.6 <- sim_dat.RL$set6_learn %>%
reduce(rbind) %>%
as_tibble()
colnames(sim.learn.6) = paste0('s6_',c(1:12))
sim.learn.6 %<>%
mutate('sim_id'=paste0('S_',1:25),
condition='set6')
RL.sim.dat <-
sim.learn.3 %>%
pivot_longer(cols = c(-sim_id, -condition) , names_to = 'iteration', values_to = 'accuracy' ) %>%
rbind(sim.learn.6 %>%
pivot_longer(cols = c(-sim_id, -condition) , names_to = 'iteration', values_to = 'accuracy' ) )
RL.sim.dat %>%
ggplot(aes(x=iteration, y=accuracy, group=condition, color=condition)) +
geom_point() + geom_line() + facet_wrap(vars(sim_id))
sim.learn.3 <-  sim_dat.RL$set3_learn %>%
reduce(rbind) %>%
as_tibble()
colnames(sim.learn.3) = paste0('s3_',c(1:12))
sim.learn.3 %<>%
mutate('sim_id'=1:25,
condition='set3')
sim.learn.6 <- sim_dat.RL$set6_learn %>%
reduce(rbind) %>%
as_tibble()
colnames(sim.learn.6) = paste0('s6_',c(1:12))
sim.learn.6 %<>%
mutate('sim_id'=1:25,
condition='set6')
RL.sim.dat <-
sim.learn.3 %>%
pivot_longer(cols = c(-sim_id, -condition) , names_to = 'iteration', values_to = 'accuracy' ) %>%
rbind(sim.learn.6 %>%
pivot_longer(cols = c(-sim_id, -condition) , names_to = 'iteration', values_to = 'accuracy' ) )
RL.sim.dat %>%
ggplot(aes(x=iteration, y=accuracy, group=condition, color=condition)) +
geom_point() + geom_line() + facet_wrap(vars(sim_id))
sim.learn.3 <-  sim_dat.RL$set3_learn %>%
reduce(rbind) %>%
as_tibble()
colnames(sim.learn.3) = 1:12
sim.learn.3
sim.learn.3 <-  sim_dat.RL$set3_learn %>%
reduce(rbind) %>%
as_tibble()
colnames(sim.learn.3) = paste0('s3_',c(1:12))
sim.learn.3 <-  sim_dat.RL$set3_learn %>%
reduce(rbind) %>%
as_tibble()
colnames(sim.learn.3) = paste0('s3_',c(1:12))
sim.learn.3 %<>%
mutate('sim_id'=1:25,
condition='set3')
sim.learn.6 <- sim_dat.RL$set6_learn %>%
reduce(rbind) %>%
as_tibble()
colnames(sim.learn.6) = paste0('s6_',c(1:12))
sim.learn.6 %<>%
mutate('sim_id'=1:25,
condition='set6')
sim.learn.6
sim.learn.3 %>%
pivot_longer(cols = c(-sim_id, -condition) , names_to = 'iteration', values_to = 'accuracy' )
RL.sim.dat <-
sim.learn.3 %>%
pivot_longer(cols = c(-sim_id, -condition) , names_to = 'iteration', values_to = 'accuracy' ) %>%
rbind(sim.learn.6 %>%
pivot_longer(cols = c(-sim_id, -condition) , names_to = 'iteration', values_to = 'accuracy' ) ) %>%
separate(col=iteration, into = c('', 'iteration') )
RL.sim.dat <-
sim.learn.3 %>%
pivot_longer(cols = c(-sim_id, -condition) , names_to = 'iteration', values_to = 'accuracy' ) %>%
rbind(sim.learn.6 %>%
pivot_longer(cols = c(-sim_id, -condition) , names_to = 'iteration', values_to = 'accuracy' ) ) %>%
separate(col=iteration, into = c('xx', 'iteration') )
RL.sim.dat
RL.sim.dat %>%
ggplot(aes(x=iteration, y=accuracy, group=condition, color=condition)) +
geom_point() + geom_line() + facet_wrap(vars(sim_id))
RL.sim.dat %>%
ggplot(aes(x=as.numeric(iteration), y=accuracy, group=condition, color=condition)) +
geom_point() + geom_line() + facet_wrap(vars(sim_id))
sim_dat.RL <- fromJSON('./sensitivity_analysis/RL_sims/RL_sim_data_frac_1111_0_to_25')$data %>%
dplyr::mutate(bias = 0)
sim.learn.3 <-  sim_dat.RL$set3_learn %>%
reduce(rbind) %>%
as_tibble()
colnames(sim.learn.3) = paste0('s3_',c(1:12))
sim.learn.3 %<>%
mutate('sim_id'=1:25,
condition='set3')
sim.learn.6 <- sim_dat.RL$set6_learn %>%
reduce(rbind) %>%
as_tibble()
colnames(sim.learn.6) = paste0('s6_',c(1:12))
sim.learn.6 %<>%
mutate('sim_id'=1:25,
condition='set6')
RL.sim.dat <-
sim.learn.3 %>%
pivot_longer(cols = c(-sim_id, -condition) , names_to = 'iteration', values_to = 'accuracy' ) %>%
rbind(sim.learn.6 %>%
pivot_longer(cols = c(-sim_id, -condition) , names_to = 'iteration', values_to = 'accuracy' ) ) %>%
separate(col=iteration, into = c('xx', 'iteration') )
RL.sim.dat %>%
ggplot(aes(x=as.numeric(iteration), y=accuracy, group=condition, color=condition)) +
geom_point() + geom_line() + facet_wrap(vars(sim_id))
sim.test =  matrix(
sim_dat.RL$set3_test,
nrow = numel(sim_dat.RL$set3_test),
ncol = 12) %>%
cbind(matrix(
sim_dat.RL$set6_test,
nrow = numel(sim_dat.RL$set6_test),
ncol = 12))
name <- function(variables) {
sim.learn = sim.mod$set3_learn %>%
reduce(rbind) %>%
cbind(sim.mod$set6_learn %>% reduce(rbind))
sim.test =  matrix(
sim.mod$set3_test,
nrow = numel(sim.mod$set3_test),
ncol = 12) %>%
cbind(matrix(
sim.mod$set6_test,
nrow = numel(sim.mod$set6_test),
ncol = 12))
}
RL.model
sim_dat.RL <- fromJSON('./sensitivity_analysis/RL_sims/RL_sim_data_frac_1111_0_to_25')$data %>%
dplyr::mutate(bias = 0)
sim_dat.RL =RL.model
sim.learn.3 <-  sim_dat.RL$set3_learn %>%
reduce(rbind) %>%
as_tibble()
colnames(sim.learn.3) = paste0('s3_',c(1:12))
sim.learn.3 %<>%
mutate('sim_id'=1:25,
condition='set3')
sim.learn.6 <- sim_dat.RL$set6_learn %>%
reduce(rbind) %>%
as_tibble()
colnames(sim.learn.6) = paste0('s6_',c(1:12))
sim.learn.6 %<>%
mutate('sim_id'=1:25,
condition='set6')
RL.sim.dat <-
sim.learn.3 %>%
pivot_longer(cols = c(-sim_id, -condition) , names_to = 'iteration', values_to = 'accuracy' ) %>%
rbind(sim.learn.6 %>%
pivot_longer(cols = c(-sim_id, -condition) , names_to = 'iteration', values_to = 'accuracy' ) ) %>%
separate(col=iteration, into = c('xx', 'iteration') )
RL.sim.dat %>%
ggplot(aes(x=as.numeric(iteration), y=accuracy, group=condition, color=condition)) +
geom_point() + geom_line() + facet_wrap(vars(sim_id))
sim.test =  matrix(
sim_dat.RL$set3_test,
nrow = numel(sim_dat.RL$set3_test),
ncol = 12) %>%
cbind(matrix(
sim_dat.RL$set6_test,
nrow = numel(sim_dat.RL$set6_test),
ncol = 12))
name <- function(variables) {
sim.learn = sim.mod$set3_learn %>%
reduce(rbind) %>%
cbind(sim.mod$set6_learn %>% reduce(rbind))
sim.test =  matrix(
sim.mod$set3_test,
nrow = numel(sim.mod$set3_test),
ncol = 12) %>%
cbind(matrix(
sim.mod$set6_test,
nrow = numel(sim.mod$set6_test),
ncol = 12))
}
sim_dat.RL <- fromJSON('./sensitivity_analysis/RL_sims/RL_sim_data_frac_1111_0_to_25')$data %>%
dplyr::mutate(bias = 0)
sim_dat.RL =RL.model
sim.learn.3 <-  sim_dat.RL$set3_learn %>%
reduce(rbind) %>%
as_tibble()
colnames(sim.learn.3) = paste0('s3_',c(1:12))
sim.learn.3 %<>%
mutate('sim_id'=1:25,
condition='set3')
sim.learn.6 <- sim_dat.RL$set6_learn %>%
reduce(rbind) %>%
as_tibble()
colnames(sim.learn.6) = paste0('s6_',c(1:12))
sim.learn.6 %<>%
mutate('sim_id'=1:25,
condition='set6')
RL.sim.dat <-
sim.learn.3 %>%
pivot_longer(cols = c(-sim_id, -condition) , names_to = 'iteration', values_to = 'accuracy' ) %>%
rbind(sim.learn.6 %>%
pivot_longer(cols = c(-sim_id, -condition) , names_to = 'iteration', values_to = 'accuracy' ) ) %>%
separate(col=iteration, into = c('xx', 'iteration') )
RL.sim.dat %>%
ggplot(aes(x=as.numeric(iteration), y=accuracy, group=condition, color=condition)) +
geom_point() + geom_line() + facet_wrap(vars(sim_id)) +
ggtitle("Original 100 run simulations")
sim.test =  matrix(
sim_dat.RL$set3_test,
nrow = numel(sim_dat.RL$set3_test),
ncol = 12) %>%
cbind(matrix(
sim_dat.RL$set6_test,
nrow = numel(sim_dat.RL$set6_test),
ncol = 12))
name <- function(variables) {
sim.learn = sim.mod$set3_learn %>%
reduce(rbind) %>%
cbind(sim.mod$set6_learn %>% reduce(rbind))
sim.test =  matrix(
sim.mod$set3_test,
nrow = numel(sim.mod$set3_test),
ncol = 12) %>%
cbind(matrix(
sim.mod$set6_test,
nrow = numel(sim.mod$set6_test),
ncol = 12))
}
sdat.h1 = read.csv('./RLWM_data/Half1_all_subject_n83_learn_test_data.csv',header = T)
h1.subjects <-  sdat.h1$V1
sdat.h1 <- sdat.h1[, 2:27] # exclude the subjects column
sdat.h1
sdat.repl.h1
h1.subjects <-  sdat.h1$V1
sdat.h1 <- sdat.h1[, 2:27] # exclude the subjects column
#modify sdat to balance learn and test data points by replicating test datapoint into 12
sdat.repl.h1 <- cbind(
sdat.h1[ ,1:12],
matrix(sdat.h1[ ,25],
nrow = numel(sdat.h1[ ,25]), ncol = 12),
sdat.h1[ ,13:24],
matrix(sdat.h1[ ,26],nrow = numel(sdat.h1[ ,25]), ncol = 12) )
View(sdat.repl.h1)
sim.learn.3
View(RL.sim.dat)
RL.sim.dat
h1.subjects
sdat.h1
h1.subjects <-  sdat.h1$V1
sdat.h1 <- sdat.h1[, 2:27] # exclude the subjects column
sdat.h1 = read.csv('./RLWM_data/Half1_all_subject_n83_learn_test_data.csv',header = T)
h1.subjects <-  sdat.h1$V1
sdat.h1 <- sdat.h1[, 2:27] # exclude the subjects column
h1.subjects
h1.subjects>28000
sum(h1.subjects>28000)
sum(h1.subjects<15000)
83-25+35
83-(25+35)
23+25
