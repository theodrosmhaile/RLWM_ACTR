's6test' = RL_LTMpipe.sim.dat[ind.temp.RL_LTMpipe[participants.fit==3],37]
)
str.p.model  <- data.frame( 'subjects' = subjects[participants.fit==4],
'model' = rep('biased', sum(participants.fit==4)),
's3'= RL_LTMstr.sim.dat[ind.temp.RL_LTMstr[participants.fit==4],1:12],
's6'= RL_LTMstr.sim.dat[ind.temp.RL_LTMstr[participants.fit==4],13:24],
'bll' = RL_LTMstr.sim.dat[ind.temp.RL_LTMstr[participants.fit==4],49],
'alpha' = RL_LTMstr.sim.dat[ind.temp.RL_LTMstr[participants.fit==4],50],
'egs' = RL_LTMstr.sim.dat[ind.temp.RL_LTMstr[participants.fit==4],51],
'imag' = RL_LTMstr.sim.dat[ind.temp.RL_LTMstr[participants.fit==4],52],
'ans' = RL_LTMstr.sim.dat[ind.temp.RL_LTMstr[participants.fit==4],53],
'bias' = RL_LTMstr.sim.dat[ind.temp.RL_LTMstr[participants.fit==4],54] %>%
separate(col='strtg',sep="(?<=[A-Z])(?=[0-9])", into = c( NA,'bias'), convert = TRUE) %>%
c() %>%
unlist() %>%
as.double()/100,
's3test' = RL_LTMstr.sim.dat[ind.temp.RL_LTMstr[participants.fit==4],25],
's6test' = RL_LTMstr.sim.dat[ind.temp.RL_LTMstr[participants.fit==4],37]
)
join.model.dat <- rbind(RL.p.model, LTM.p.model, pipe.p.model, str.p.model )
colnames(sdat) <- c(colnames(RL.p.model[3:26]),'s3.13','s6.13')
colnames(join.model.dat)[33:34]=c('s3.13','s6.13')
p.behav.model  = merge(cbind(subjects, sdat),
join.model.dat, by = c("subjects"),
suffixes = c('.behav', '.model'), sort=FALSE)
melted.p.behav.model <- p.behav.model %>%
reshape2::melt(id.vars = c("subjects", "model" ,'bll','alpha','egs','imag','ans', 'bias' ), value.name="accuracy", variable.name="condition") %>%
separate("condition", into = c('setSize', "iteration","type"), remove = FALSE, convert = TRUE) %>%
unite("cond.model", c(setSize,type), remove = FALSE)
plot.indiv <- function(this.model, title, columns) {
melted.p.behav.model %>%
#filter(iteration != 13) %>%
filter(model == this.model) %>%
ggplot(aes(as.numeric(iteration), accuracy, color=cond.model, group=cond.model)) +
geom_point() +
geom_line(size=1) +
facet_wrap(vars(subjects), ncol = columns, scales = 'free')+
scale_color_brewer(palette = "Paired")+
theme_pubr(base_size = 16) +
ggtitle(title)
}
# Chunk 6: model fit plots:group fit bar plot
#fit plots
#participants.fit %>%
# hist(main='Counts of participants by model', xlab = ("1= RL; 2= LTM; 3=RL_LTM"), #lwd=4.3)
fit.labels <- ifelse(participants.fit==2, 'LTM',
ifelse(participants.fit==3, 'meta_RL',
ifelse(participants.fit==4,'biased','RL')
)
)
models.name=c('RL', 'LTM', 'meta_RL', 'biased')
data.frame('model'= participants.fit)  %>%
ggplot(aes(factor(model), fill=factor(model))) +
geom_bar() +
ggtitle('Counts of participants by model') +
# theme_minimal(base_size = 20)+
scale_x_discrete(labels=models.name )+
xlab("Models")+
scale_fill_brewer( palette = "Paired")+
theme_pubclean(base_size = 24) +
theme(legend.position='none')
# Chunk 7: unique fitting model counts
nRL = ind.temp.RL[participants.fit==1 ] %>% unique()
nLTM  = ind.temp.LTM[participants.fit==2 ] %>% unique()
nBias = ind.temp.RL_LTMstr[participants.fit==4 ] %>% unique()
nMeta = ind.temp.RL_LTMpipe[participants.fit==3 ] %>% unique()
# Chunk 8: BOX PLOT 1
model.fits%>%
reshape2::melt() %>%
ggplot(aes(y=value,variable, group=variable)) +
geom_boxplot(size=1) +
ggtitle('BIC: All participants')+
xlab('model')+
scale_x_discrete(labels=models.name )+
#theme_bw() +
# scale_fill_brewer( palette = "Set2") +
theme_pubclean(base_size = 24)
# Chunk 9: model fit plots: group fit BOXPLOT2
selector <- c(participants.fit==1,participants.fit==2,participants.fit==3,participants.fit==4)
model.fits %>%
reshape2::melt() %>%
cbind(selector) %>%
filter(selector==TRUE) %>%
ggplot(aes(y=value,variable, group=variable)) +
scale_x_discrete(labels=models.name )+
geom_boxplot(size=1) +
ggtitle('BIC: best fitting per model')+
xlab('model')+
#  theme_bw() +
scale_colour_brewer( palette = "Set1") +
theme_pubclean(base_size = 24)
# Chunk 10: fit consitency 1
consist.check <- rbind(
RL.bic %>% t() %>% data.frame(mod='RL'),
LTM.bic %>% t() %>% data.frame(mod='LTM'),
RL_LTMpipe.bic %>% t() %>% data.frame(mod='metaRL'),
RL_LTMstr.bic %>% t() %>% data.frame(mod='biased')
)
ordered.dat=apply(consist.check[,1:83], 2, order)
sorted.bic.dat <- apply(consist.check[,1:83], 2, sort)
mod.list <- (rep(consist.check$mod,83))
comp.temp <- mod.list %>% as.matrix() %>%  matlab::reshape(.,length(consist.check$mod),83)
comp <- comp.temp[ordered.dat[,c(1:83)]] %>%
as.matrix() %>% matlab::reshape(.,length(consist.check$mod),83)
n.to.diff.model <- c()
for (s in 1:83) {
n.to.diff.model[s] <-   match(TRUE,is.na(match(comp[,s],comp[1,s])))
}
data.frame(model=p.behav.model$model, participant.min, n.to.diff.model) %>%
group_by(model) %>% dplyr::summarise(mean=mean(n.to.diff.model),
median=median(n.to.diff.model),
sd=sd(n.to.diff.model),
min=min(n.to.diff.model),
max=max(n.to.diff.model)) %>%
knitr::kable(caption = "Statistics on where the next best fit occurs for each participant by model")
p.s2nd.newmodel <- data.frame(subjects=p.behav.model$subjects,model=p.behav.model$model) %>%
filter(n.to.diff.model==2)
#data.frame(participants.fit, participant.min, n.to.diff.model) %>%
#ggplot(aes(x=n.to.diff.model, group=participants.fit,fill=factor(participants.fit))) + geom_density(alpha=.4)
#Test of stability for the first 100 models, how often is the best fitting model still th best fitting model? If it jumps around what's the deviation in the parameter-values?
# Chunk 11: mean BIC for subsequent models
sorted.bic.dat %>%  data.frame(ind=c(1:15775)) %>%
filter(ind<101) %>%
reshape2::melt(id.vars='ind') %>%
group_by(ind) %>% dplyr::summarise(mean=mean(value),
sem=sd(value)/sqrt(83)) %>%
ggplot(aes(y=mean, x=ind))+
#geom_ribbon(aes(ymin=mean-sem,ymax=mean+sem, fill='red', alpha=0.4))+
geom_errorbar(aes(ymin=mean-sem,ymax=mean+sem, color='red'))+
geom_point() +
ggtitle("mean BIC for subsequent models") +
theme_pubclean()
# Chunk 12: mean differences of consecutive BIC values
# The change in BIC matters: find the change in BIC for ranked models for each person and average for the 1st 100 models
BIC.diff <-
apply(sorted.bic.dat %>%  data.frame(ind=c(1:15775)) %>% filter(ind<101),2,diff) %>%
data.frame(ind2=c(1:99)) %>%
dplyr::select(-ind) %>%
reshape2::melt(id.vars='ind2')
BIC.diff %>%
filter(ind2<11) %>%
group_by(ind2) %>%
dplyr::summarise('mean.diff'=mean(value),'sem'=sd(value)/sqrt(83)) %>%
ggplot(aes(x=factor(ind2), y=mean.diff)) +
geom_point() +
geom_errorbar(aes(ymax=mean.diff+sem, ymin=mean.diff-sem)) +
ylab("mean differences of consecutive BIC values")+
xlab('index of rank ordered Ma-Mb model BICs differences') +
geom_hline(yintercept = c(0,2,6,10), color='red') +
#  geom_label(y=c(2,5,10),x=c(8,8,8),label=c('weak', 'meaningful','strong') )+
theme_pubclean()
# Chunk 13: BIC Diffs by model type
# stat test of the differences between the first and second differencs
# BIC.diff %>%
#   filter(ind2 <3) %>%
#  t.test((value) ~ ind2, data = ., paired=T)
#
# BIC.diff %>%
#   filter(ind2 <3) %>%
#   ggplot(aes((value), fill=factor(ind2), group=factor(ind2))) +
#   geom_density()
#What do the BIC diffs look like by model type?
BIC.diff %>%
filter(ind2<2) %>%
reshape2::dcast(variable ~ ind2, value.var = 'value') %>%
data.frame(model=p.behav.model$model, subjects=p.behav.model$subjects) %>%
dplyr::select(-variable) %>%
# filter(model=='LTM') %>%
reshape2::melt(id.vars=c('model','subjects'), variable.name='BIC.ind', value.name='BIC.diff') %>%
group_by(model, BIC.ind) %>%
dplyr::summarise(mean=mean(BIC.diff),SD=sd(BIC.diff), 'sem'=sd(BIC.diff)/sqrt(length(BIC.diff))) %>%
ggplot(aes(x=model, y=mean)) +
geom_point()+
geom_errorbar(aes(ymin=mean-sem,ymax=mean+sem), width = .5) +
ylab("mean differences of BIC values for first 2 best fitting models")+
xlab( 'Model') +
ylim(c(0,10))+
geom_hline(yintercept = c(0,2,6,10), color='red') +
#facet_wrap(vars(model)) +
theme_pubclean()
# Chunk 14: number of times the model was selected
#mean number of times the model was selected in the first 10
comp %>%  data.frame(ind=c(1:15775)) %>%
filter(ind<11) %>%
reshape2::melt(id.vars='ind') %>%
group_by(variable)  %>% dplyr::count(value) %>%
reshape2::dcast(variable ~ value, value.var = 'n') %>%
data.frame(model=p.behav.model$model, subjects=p.behav.model$subjects) %>%   #added subjects
# filter(model=='LTM' ) %>% #added filter by model
reshape2::melt(id.vars=c('variable','model', 'subjects'), variable.name='mod.type') %>%
group_by(model,mod.type) %>%
dplyr::summarise(mean=mean(value, na.rm = T),
median=median(value,na.rm = T),
n=sum(!is.na(value)),
sem=sd(value,na.rm = T)/sqrt(sum(!is.na(value)))) %>%
ggplot(aes(x=mod.type,y=mean)) +
geom_point() +
geom_errorbar(aes(ymin=mean-sem,ymax=mean+sem)) +
facet_wrap(vars(model)) +
ylab('mean number of times model was selected') +
xlab('model type selected') +
ggtitle('number of times the model was selected in ranked 1st 10')+
theme_pubclean()
##Chantel's request
BIC.diff %>%
filter(ind2<4) %>%
reshape2::dcast(variable ~ ind2, value.var = 'value') %>%
data.frame( subjects=p.behav.model$subjects) %>%
dplyr::select(-variable) %>%
merge(p.s2nd.newmodel, by='subjects') %>%
kable(caption = 'These subjects had second best fit models that came from a differnt model group. X1 to X3 are the BIC differences.')
#as the number of fits examined goes up, what is the change in th preferred ftut
# Chunk 15: models only
model.ID =c(1:(nrow(RL.sim.dat) + nrow(LTM.sim.dat) +nrow(RL_LTMpipe.sim.dat) + nrow(RL_LTMstr.sim.dat)))
all.models <- rbind(
data.frame(
'model' = 'RL',
's3'=RL.sim.dat[,1:12],
's6'=RL.sim.dat[,13:24]),
data.frame(
'model' = 'LTM',
's3'=LTM.sim.dat[, 1:12],
's6'=LTM.sim.dat[, 13:24]),
data.frame(
'model'='metaRL',
's3'=RL_LTMpipe.sim.dat[,1:12],
's6'=RL_LTMpipe.sim.dat[,13:24]),
data.frame(
'model'='bias',
's3'=RL_LTMstr.sim.dat[,1:12],
's6'=RL_LTMstr.sim.dat[,13:24])) %>%
cbind(model.ID) %>%
reshape2::melt(id.vars=c("model.ID","model"), value.name="accuracy", variable.name="condition")
models.only.plt <-   all.models %>%
separate("condition", into = c( 'setSize','iteration'), convert = T) %>%
unite("cond.model", c('model','setSize'), remove = FALSE) %>%
summarySE(measurevar = 'accuracy', groupvars = c('model','setSize','iteration', 'cond.model')) %>%
ggplot(aes(as.factor(iteration),accuracy, group=cond.model,color=cond.model)) +
geom_point(size=1.5) +
geom_line(size=1) +
#facet_wrap(vars(model)) +
scale_color_brewer(palette = "Paired") +
theme_pubclean(base_size = 24) +
xlab('stimulus iteration')
if(0){
models.lr <-  all.models %>%
filter(iteration<7 ) %>% # get the first 6 learning trials to model
dplyr::group_by(model,setSize, model.ID) %>%
do( broom::tidy(lm(accuracy~iteration, data=.))[2] %>%
as_data_frame()) %>%
cbind('estimate.type'= rep(c('y-int','slope'), 31550))
write.csv(models.lr, 'learning_rate_estimate_all_models.csv',row.names = F)
models.lr %>%
filter(estimate.type=='slope') %>%
group_by(model,setSize ) %>%
dplyr::summarize('mean'= mean(estimate),
'se' = sd(estimate, na.rm = T) / sqrt(sum(!is.na(estimate)))) %>%
ggplot(aes(mean,x=setSize, group=model, color=model)) +
#geom_histogram(stat = 'count') +
geom_point(size=2)+
geom_errorbar(aes(ymax=mean+se,ymin=mean-se), width=.25, size=1.5)+
scale_color_brewer(palette = "Paired") +
theme_pubr()+
# facet_wrap(vars(model)) +
ggtitle("rate: beta estimate of first 6 iterations")
}
models.only.plt
#stats
all.models %>%
separate("condition", into = c( 'setSize','iteration'), convert = T) %>%
filter(iteration==12) %>%
summarySE(measurevar = 'accuracy', groupvars = c('model','setSize')) %>% kable(caption = 'Descriptive statistics for models: end of learning accuracy')
p.behav.model %>% dplyr::select('subjects','model','bll','ans','egs','imag', 'bias','alpha') %>% write.csv('model_fit_by_RMSE_012022.csv', row.names = F)
rm(list = ls())
# Chunk 1
library(tidyverse)
library(ggpubr)
# Chunk 2: data
EEG.dat <- read_csv('./RLWM_data/EEG_data_UClimb_and_REALM.csv')
RMSE.fit <- read_csv('model_fit_by_RMSE_012022.csv')
RMSE.EEG.dat <- RMSE.fit %>%
select(subjects, bll,model) %>%
filter(subjects>=15000, model!='RL') %>%
inner_join(EEG.dat, by='subjects')
RMSE.EEG.dat
beta.data <- RMSE.EEG.dat %>%
select(contains('upper'), -Age, bll, subjects, model) %>%
pivot_longer(cols = contains('upper'), names_to = 'e_type',values_to = 'value') %>%
separate(col=e_type, into = c('electrode','band','study'), remove = T) %>%
na.omit()
beta.data %>%
ggplot(aes(scale(bll),scale(value), color=electrode)) +
geom_point() +
geom_smooth(method = 'lm')+
facet_wrap(vars(electrode)) +
# scale_color_brewer(palette = "Set1") +
theme_pubclean(base_size = 20)
beta.data %>% head
beta.data %>% filter(study=='Beta') %>% select(value)
beta.data %>% filter(study=='Beta') %>% select(value) %>% hist()
beta.data %>% filter(study=='Beta') %>% select(value) %>% as.numeric() %>% hist()
beta.data %>% filter(study=='Beta') %>% select(value) %>% ggplot(aes(value)) +geom_histogram()
beta.data %>% filter(study=='Beta') %>% select(value) %>% scale() %>% ggplot(aes(value)) +geom_histogram()
beta.data %>% filter(study=='Beta') %>% select(value) %>% scale() %>% names
beta.data %>% filter(study=='Beta') %>% select(value) %>% scale() %>%
beta.data %>% filter(study=='Beta') %>% select(value) %>% scale()
beta.data %>% filter(study=='Beta') %>% select(value) %>% scale() %>% max
beta.data %>% filter(study=='Beta') %>% select(value) %>% scale(scale=F)
beta.data %>% filter(study=='Beta') %>% select(value) %>% scale(scale=F) %>% max
beta.data %>% filter(study=='Beta') %>% select(value) %>% scale(center=F) %>% max
beta.data %>% filter(study=='Beta') %>% select(value) %>% scale(center=F) %>% min
beta.data %>%
ggplot(aes(bll,scale(value, center = F), color=electrode)) +
geom_point() +
geom_smooth(method = 'lm')+
facet_wrap(vars(electrode)) +
# scale_color_brewer(palette = "Set1") +
theme_pubclean(base_size = 20)
install.packages('gradDescent')
library(gradDescent)
beta.data %>% filter(study=='Beta') %>% select(value) %>% minmaxScaling()
beta.data %>%
ggplot(aes(bll,minmaxScaling(value), color=electrode)) +
geom_point() +
geom_smooth(method = 'lm')+
facet_wrap(vars(electrode)) +
# scale_color_brewer(palette = "Set1") +
theme_pubclean(base_size = 20)
beta.data$scaled_vals <- beta.data %>% select(value) %>% minmaxScaling()
beta.data %>% select(value) %>% minmaxScaling()
beta.data %>% select(value) %>% minmaxScaling() %>% c()
beta.data %>% select(value) %>% minmaxScaling() %>% as.data.frame()
beta.data %>% select(value) %>% minmaxScaling() %>% as.data.frame()$value
scaled.vals.temp <- beta.data %>% select(value) %>% minmaxScaling() %>% as.data.frame()
scaled.vals.temp$value
beta.data$scaled_vals <- scaled.vals.temp$value
beta.data %>% head
beta.data %>%
ggplot(aes(bll,scaled_vals, color=electrode)) +
geom_point() +
geom_smooth(method = 'lm')+
facet_wrap(vars(electrode)) +
# scale_color_brewer(palette = "Set1") +
theme_pubclean(base_size = 20)
scaled.bll.temp <- beta.data %>% select(bll) %>% minmaxScaling() %>% as.data.frame()
scaled.bll.temp <- beta.data %>% select(bll) %>% minmaxScaling() %>% as.data.frame()
beta.data$scaled_bll <- scaled.bll.temp$bll
beta.data %>%
ggplot(aes(scaled_bll,scaled_vals, color=electrode)) +
geom_point() +
geom_smooth(method = 'lm')+
facet_wrap(vars(electrode)) +
# scale_color_brewer(palette = "Set1") +
theme_pubclean(base_size = 20)
beta.data %>%
ggplot(aes(scaled_bll,scaled_vals, color=electrode)) +
geom_point() +
geom_smooth(method = 'lm')+
facet_wrap(vars(electrode)) +
ylim(0,.7)+
# scale_color_brewer(palette = "Set1") +
theme_pubclean(base_size = 20)
beta.data %>%
ggplot(aes(scaled_bll,scaled_vals, color=electrode)) +
geom_point() +
geom_smooth(method = 'lm')+
facet_wrap(vars(electrode)) +
ylim(0,.6)+
# scale_color_brewer(palette = "Set1") +
theme_pubclean(base_size = 20)
RMSE.fit
RMSE.fit %>%
pivot_longer(cols = c(-subjects, -model), values_to = 'value', names_to = 'parameter') %>%
View
RMSE.fit %>%
pivot_longer(cols = c(-subjects, -model), values_to = 'value', names_to = 'parameter') %>%
filter(model!='RL') %>%
View
RMSE.fit %>%
pivot_longer(cols = c(-subjects, -model), values_to = 'value', names_to = 'parameter') %>%
filter(parameter!='egs' | parameter!='alpha') %>%
View
RMSE.fit %>%
pivot_longer(cols = c(-subjects, -model), values_to = 'value', names_to = 'parameter') %>%
filter(parameter!='egs' | parameter!='alpha') %>%
View
RMSE.fit %>%
pivot_longer(cols = c(-subjects, -model), values_to = 'value', names_to = 'parameter') %>%
filter(parameter!='egs') %>%
View
RMSE.fit %>%
pivot_longer(cols = c(-subjects, -model), values_to = 'value', names_to = 'parameter') %>%
filter(parameter=='egs') %>%
View
RMSE.fit %>%
pivot_longer(cols = c(-subjects, -model), values_to = 'value', names_to = 'parameter') %>%
filter(parameter!='egs') %>%
View
RMSE.fit %>%
pivot_longer(cols = c(-subjects, -model), values_to = 'value', names_to = 'parameter') %>%
filter(parameter!='egs') %>%
filter(parameter!='alpha') %>%
View
RMSE.fit %>%
pivot_longer(cols = c(-subjects, -model), values_to = 'value', names_to = 'parameter') %>%
filter(parameter!='egs') %>%
filter(parameter!='alpha') %>%
filter(parameter!='bias') %>%
View
RMSE.fit %>%
filter(model!='RL') %>%
#pivot_longer(cols = c(-subjects, -model), values_to = 'value', names_to = 'parameter') %>%
#filter(parameter!='egs') %>%
#filter(parameter!='alpha') %>%
#filter(parameter!='bias') %>%
View
RMSE.fit %>%
filter(model!='RL') %>%
#pivot_longer(cols = c(-subjects, -model), values_to = 'value', names_to = 'parameter') %>%
#filter(parameter!='egs') %>%
#filter(parameter!='alpha') %>%
#filter(parameter!='bias') %>%
ggplot(aes(bll,imag )) +
geom_point()
RMSE.fit %>%
filter(model!='RL') %>%
#pivot_longer(cols = c(-subjects, -model), values_to = 'value', names_to = 'parameter') %>%
#filter(parameter!='egs') %>%
#filter(parameter!='alpha') %>%
#filter(parameter!='bias') %>%
ggplot(aes(bll,imag )) +
geom_point() +
geom_smooth()
RMSE.fit %>%
filter(model!='RL') %>%
#pivot_longer(cols = c(-subjects, -model), values_to = 'value', names_to = 'parameter') %>%
#filter(parameter!='egs') %>%
#filter(parameter!='alpha') %>%
#filter(parameter!='bias') %>%
RMSE.fit %>%
filter(model!='RL') %>%
select(imag,bll,ans) %>%
cor()
RMSE.fit %>%
filter(model!='RL') %>%
#pivot_longer(cols = c(-subjects, -model), values_to = 'value', names_to = 'parameter') %>%
#filter(parameter!='egs') %>%
#filter(parameter!='alpha') %>%
#filter(parameter!='bias') %>%
RMSE.fit %>%
filter(model!='RL') %>%
select(imag,bll,ans) %>%
cor()
RMSE.fit %>%
filter(model!='RL') %>%
select(imag,bll,ans)
RMSE.fit %>%
filter(model!='RL') %>%
#pivot_longer(cols = c(-subjects, -model), values_to = 'value', names_to = 'parameter') %>%
#filter(parameter!='egs') %>%
#filter(parameter!='alpha') %>%
#filter(parameter!='bias') %>%
RMSE.fit %>%
filter(model!='RL') %>%
select(imag,bll,ans) %>%
cor.test()
RMSE.fit %>%
filter(model!='RL') %>%
select(imag,bll,ans) %>%
cor.test()
RMSE.fit %>%
filter(model!='RL') %>%
select(imag,bll,ans) %>%
cor()
RMSE.fit %>%
filter(model!='RL') %>%
select(imag,bll,ans) %>%
cor() %>%
kable()
RMSE.fit %>%
filter(model!='RL') %>%
select(imag,bll,ans) %>%
cor() %>%
kableExtra::kable()
cor.test(RMSE.fit$imag,RMSE.fit$ans)
#RMSE.fit %>%
# filter(model!='RL')
#pivot_longer(cols = c(-subjects, -model), values_to = 'value', names_to = 'parameter') %>%
#filter(parameter!='egs') %>%
#filter(parameter!='alpha') %>%
#filter(parameter!='bias') %>%
RMSE.fit %>%
filter(model!='RL') %>%
select(imag,bll,ans) %>%
ggpairs()
library(GGally)
#RMSE.fit %>%
# filter(model!='RL')
#pivot_longer(cols = c(-subjects, -model), values_to = 'value', names_to = 'parameter') %>%
#filter(parameter!='egs') %>%
#filter(parameter!='alpha') %>%
#filter(parameter!='bias') %>%
RMSE.fit %>%
filter(model!='RL') %>%
select(imag,bll,ans) %>%
ggpairs()
RMSE.fit %>%
filter(model!='RL') %>%
select(imag,bll,ans) %>%
ggplot(aes(ans,imag)) +
geom_point()+
geom_smooth(method = 'lm')
