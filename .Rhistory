ylim(c(0,6))+
scale_x_discrete(labels=c("M2-M1","M3-M2", "M4-M3", "M5-M4", "M6-M5", "M7-M6", "M8-M7", "M9-M8", "M10-M9", "M11-M10"))+
#  geom_label(y=c(2,5,10),x=c(8,8,8),label=c('weak', 'meaningful','strong') )+
theme_pubclean(base_size = 20)
BIC.diff %>%
filter(ind2<11) %>%
group_by(ind2) %>%
dplyr::summarise('mean.diff'=mean(value),'sem'=sd(value)/sqrt(83)) %>%
ggplot(aes(x=factor(ind2), y=mean.diff)) +
geom_point() +
geom_errorbar(aes(ymax=mean.diff+sem, ymin=mean.diff-sem)) +
ylab("Mean differences of consecutive BIC values")+
xlab('ordered Mb-Ma model BIC differences') +
geom_hline(yintercept = c(0,2,6,10), color='red') +
ylim(c(0,6))+
scale_x_discrete(labels=c("M2-M1","M3-M2", "M4-M3", "M5-M4", "M6-M5", "M7-M6", "M8-M7", "M9-M8", "M10-M9", "M11-M10"))+
#  geom_label(y=c(2,5,10),x=c(8,8,8),label=c('weak', 'meaningful','strong') )+
theme_pubclean(base_size = 20)
#Figure showing end of learning and test
melted.p.behav.model %>%
filter(iteration <=12 & iteration>=8, type=='model') %>%
group_by(subjects, setSize) %>%
summarize(learn_mean=mean(accuracy)) %>%
inner_join( melted.p.behav.model %>% filter(iteration ==13, type=='behav') %>%
group_by(subjects, setSize) %>%
summarize(test=accuracy), by=c('subjects','setSize')) %>%
pivot_longer(cols = c(learn_mean, test), values_to = 'accuracy', names_to = 'condition') %>%
summarySE( measurevar = "accuracy", groupvars = c("setSize", "condition")) %>%
ggplot(aes( condition, accuracy, color=setSize, group=setSize)) +
geom_point(size=2) +
geom_line(size=1.5) +
geom_errorbar(aes(ymin=accuracy-se, ymax=accuracy+se), width=.2, size=1.5) +
# facet_wrap(vars(model)) +
scale_color_brewer(palette = "Set1" ) +
xlab('condition') +
ylab('Accuracy')+
ylim(c(0.7,1))+
#ggtitle('change from learn')+
labs(color='set-size')+
theme_pubr(legend=c('bottom' ), base_family = 'Times')+
scale_x_discrete(labels=c("end of learning","test"))+
theme_pubclean(base_size = 24)
#Figure showing end of learning and test
melted.p.behav.model %>%
>>>>>>> b398e802a2367b69cf29620a9678d34ace7d7332
filter(iteration <=12 & iteration>=8, type=='model') %>%
group_by(subjects, setSize) %>%
summarize(learn_mean=mean(accuracy)) %>%
inner_join( melted.p.behav.model %>% filter(iteration ==13, type=='behav') %>%
group_by(subjects, setSize) %>%
summarize(test=accuracy), by=c('subjects','setSize')) %>%
pivot_longer(cols = c(learn_mean, test), values_to = 'accuracy', names_to = 'condition') %>%
summarySE( measurevar = "accuracy", groupvars = c("setSize", "condition")) %>%
ggplot(aes( condition, accuracy, color=setSize, group=setSize)) +
geom_point(size=2) +
geom_line(size=1.5) +
geom_errorbar(aes(ymin=accuracy-se, ymax=accuracy+se), width=.2, size=1.5) +
# facet_wrap(vars(model)) +
scale_color_brewer(palette = "Set1" ) +
xlab('condition') +
ylab('Accuracy')+
ylim(c(0.7,1))+
ggtitle('Test Phase')+
labs(color='set-size')+
theme_pubr(legend=c('bottom' ), base_family = 'Times')+
scale_x_discrete(labels=c("end of learning","test"))+
theme_pubclean(base_size = 24)
<<<<<<< HEAD
ggarrange(subjects.only.plt,test.phase.plt, common.legend = T)
# Chunk 18: model + subjects group plot
# models.only.plt +
#  geom_point(data= melted.p.behav.model %>%
#               filter(iteration != 13) %>%
#               summarySE( measurevar = "accuracy", groupvars = c("iteration", "setSize")),
#             aes( as.factor(iteration), accuracy, color=setSize, group=setSize))
# Chunk 19: Learning and test combined plot
#------Learning and test combined
learn2test.plt<- melted.p.behav.model %>%
filter(iteration>=12) %>% #Grab both the 12th iteration and test
summarySE( measurevar = "accuracy", groupvars = c( "model","cond.model", "iteration")) %>%
ggplot(aes(x=as.factor(iteration),weight=accuracy,ymin=accuracy-se, ymax=accuracy+se, group=cond.model,  color=cond.model)) +
geom_errorbar(position=position_dodge(width = 0.1), width=.25, size=1.5) +
geom_point(position =position_dodge(width = 0.1), aes(y=accuracy, color=cond.model), size=2) +
geom_line(position =position_dodge(width = 0.1), aes(y=accuracy, color=cond.model), size=1) +
scale_color_brewer(palette = "Paired") +
ylim(c(0.25,1))+
xlab('condition') +
theme_pubclean(base_size = 24)  +
scale_x_discrete(labels=c("learn","test"))+
facet_wrap(vars(model)) +
theme(legend.position = 'none')
#stats
# melted.p.behav.model %>%
#   filter(type=='behav', iteration==12 | iteration==13) %>%
#   select(setSize, accuracy, iteration) %>%
#   ggplot(aes(accuracy, fill=factor(iteration))) +
#   geom_density(alpha=.4) +
#   facet_wrap(vars(setSize))
melted.p.behav.model %>%
filter(type=='behav', iteration>=12) %>%
select(setSize, accuracy, iteration) %>%
lm(accuracy ~ setSize * iteration, data=.) %>%
anova() %>%
broom::tidy() %>% kable(caption = "2 x 2 setzise by interation(learn vs test) ANOVA table for behavioral data")
melted.p.behav.model %>%
filter(type=='model', iteration==12 | iteration==13) %>%
select(setSize, accuracy, iteration) %>%
lm(accuracy ~ setSize * iteration, data=.) %>%
anova() %>%
broom::tidy() %>% kable(caption = "2 x 2 setzise by interation(learn vs test) ANOVA table for model data")
melted.p.behav.model
test.phase.plt
=======
>>>>>>> b398e802a2367b69cf29620a9678d34ace7d7332
subjects.only.plt
#Figure showing end of learning and test
test.phase.plt <- melted.p.behav.model %>%
filter(iteration <=12 & iteration>=8, type=='model') %>%
group_by(subjects, setSize) %>%
summarize(learn_mean=mean(accuracy)) %>%
inner_join( melted.p.behav.model %>% filter(iteration ==13, type=='behav') %>%
group_by(subjects, setSize) %>%
summarize(test=accuracy), by=c('subjects','setSize')) %>%
pivot_longer(cols = c(learn_mean, test), values_to = 'accuracy', names_to = 'condition') %>%
summarySE( measurevar = "accuracy", groupvars = c("setSize", "condition")) %>%
ggplot(aes( condition, accuracy, color=setSize, group=setSize)) +
geom_point(size=2) +
geom_line(size=1.5) +
geom_errorbar(aes(ymin=accuracy-se, ymax=accuracy+se), width=.2, size=1.5) +
# facet_wrap(vars(model)) +
scale_color_brewer(palette = "Set1" ) +
xlab('condition') +
ylab('Accuracy')+
ylim(c(0.7,1))+
ggtitle('Test Phase')+
labs(color='set-size')+
theme_pubr(legend=c('bottom' ), base_family = 'Times')+
scale_x_discrete(labels=c("end of learning","test"))+
theme_pubclean(base_size = 24)
<<<<<<< HEAD
BIC.diff
all.models
model.ID
test.mod.plt
all.models.long.plt
all.models.long.plt %>%
filter(iteration >=12) %>%
summarySE(measurevar = 'accuracy', groupvars = c('model','setSize','iteration', 'cond.model'))
all.models.long.plt
all.models.long.plt %>% View
all.models.long.plt %>% filter(model=='RL', iteration>=12) %>% View
all.models.long.plt %>%
filter(iteration>=12) %>%  dplyr::group_by(model, setSize, iteration) %>% dplyr::summarise(mean(accuracy))
RL.sim.dat
RL.sim.dat[,26]
RL.sim.dat
simsRL
RL.sim.dat[,1:12]
RL.sim.dat[,1:12]==simsRL$data$set3_learn
simsRL$data$set3_learn
simsRL$data$set3_learn %>% bind_cols()
(simsRL$data$set3_learn %>% bind_cols() %>% t())== RL.sim.dat[,1:12]
(simsRL$data$set3_test )
(simsRL$data$set3_test )==RL.sim.dat[, 25]
(simsRL$data$set6_test )==RL.sim.dat[, 25]
(simsRL$data$set6_test )==RL.sim.dat[, 26]
RL.sim.dat
RL.sim.dat[,28]
RL.sim.dat[,12]
RL.sim.dat %>% janitor::clean_names()
RL.sim.dat %>% ncol
all.models
simsRL
simsRL$data$set3_learn
simsRL$data$set3_test
simsRL
simsRL$data$set3_learn
simsRL$data$set3_learn %>% bind_rows()
simsRL$data$set3_learn %>% reduce(bind_rows)
simsRL$data$set3_learn %>% bind_cols()
simsRL$data$set3_learn %>% str()
simsRL$data$set3_learn %>% reduce(rbind)
simsRL$data$set3_learn %>% reduce(rbind) %>% as_tibble()
simsRL$data$set3_learn %>% reduce(rbind) %>% data.frame()
simsRL$data %>% select(contains('learn')
)
simsRL$data %>% .[c('set3_learn', 'set6_learn')]
file.edit('dev.rmd')
simsRL$data %>% .[c('set3_learn', 'set6_learn')] %>%
map(~.x %>%
reduce(rbind) %>%
data.frame
)
simsRL$data %>% .[c('set3_learn', 'set6_learn')] %>%
map(~.x %>%
reduce(rbind) %>%
data.frame
) %>%
reduce(bind_rows)
simsRL$data %>%
.[c('set3_learn', 'set6_learn')] %>%
map(~.x %>%
reduce(rbind) %>%
data.frame %>%
janitor::clean_names()
) %>%
reduce(bind_rows)
simsRL$data %>%
.['set3_learn']
c('set3_learn') %>%
map(~ simsRL$data %>%
.[.x] %>%
reduce(rbind) %>%
data.frame %>%
) %>%
c('set3_learn') %>%
map(~ simsRL$data %>%
.[.x] %>%
reduce(rbind) %>%
data.frame %>%
) %>%
c('set3_learn') %>%
map(~ simsRL$data %>%
.[.x] %>%
reduce(rbind) %>%
data.frame %>%
) %>%
c('set3_learn') %>%
map(~ simsRL$data %>%
.[.x] %>%
reduce(rbind) %>%
data.frame
) %>%
reduce(bind_rows)
c('set3_learn') %>%
map(~ simsRL$data %>%
.[[.x]] %>%
reduce(rbind) %>%
data.frame
) %>%
reduce(bind_rows)
c('set3_learn','set6_learn') %>%
map(~ simsRL$data %>%
.[[.x]] %>%
reduce(rbind) %>%
data.frame() %>%
mutate(condition =.x)
) %>%
reduce(bind_rows)
c('set3_learn','set6_learn') %>%
map(~ simsRL$data %>%
.[[.x]] %>%
reduce(rbind) %>%
data.frame() %>%
mutate(condition =.x)
) %>%
reduce(bind_rows) %>%
pivot_longer(cols = starts_with('x'))
simsRL$data %>%
.['set3_test']
simsRL$data %>%
.[['set3_test']]
temp <- simsRL$data %>%
.[['set3_test']]
data.frame(
condition='set3_test',
name=rep(c(1:12), 12)
)
data.frame(
condition='set3_test',
name=rep(c(1:12), 12),
value=rep(temp, 12)
)
rep(temp, 12)
data.frame(
condition='set3_test',
name=rep(c(1:12), 25),
value=rep(temp, 12)
)
data.frame(
condition='set3_test',
name=pasete0('x', rep(c(1:12), 25)),
value=rep(temp, 12)
)
data.frame(
condition='set3_test',
name=paste0('x', rep(c(1:12), 25)),
value=rep(temp, 12)
)
c('set3_test', 'set6_test') %>%
map (~ {temp <- simsRL$data %>%
.[[.x]]
data.frame(
condition=.x,
name=paste0('x', rep(c(1:12), 25)),
value=rep(temp, 12)
)
}
)
bind_rows(c('set3_learn','set6_learn') %>%
map(~ simsRL$data %>%
.[[.x]] %>%
reduce(rbind) %>%
data.frame() %>%
mutate(condition =.x)
) %>%
reduce(bind_rows) %>%
pivot_longer(cols = starts_with('x')),
c('set3_test', 'set6_test') %>%
map (~ {temp <- simsRL$data %>%
.[[.x]]
data.frame(
condition=.x,
name=paste0('x', rep(c(1:12), 25)),
value=rep(temp, 12)
)
}
))
RL.sim.dat %>% ncol()
RL.sim.dat %>% head()
53-6
47-12
RL.sim.dat[, 36]
RL.sim.dat[, 35]
RL.sim.dat[, 37]
RL.sim.dat[, 25]
model.ID <- c(1:(nrow(RL.sim.dat) + nrow(LTM.sim.dat) +nrow(RL_LTMpipe.sim.dat) + nrow(RL_LTMstr.sim.dat)))
fix_cols <- c('model',paste0('s3_',seq(1,13,1)),paste0('s6_',seq(1,13,1)) ) %>% as.character()
all.models <- rbind(
data.frame(
'model' = 'RL',
's3'=cbind(RL.sim.dat[,1:12], RL.sim.dat[, 25]),
's6'=cbind(RL.sim.dat[,13:24],RL.sim.dat[,37])
),
data.frame(
'model' = 'LTM',
's3'=cbind(LTM.sim.dat[, 1:12],LTM.sim.dat[, 25]),
's6'=cbind(LTM.sim.dat[, 13:24],LTM.sim.dat[, 37])
),
data.frame(
'model'='Meta-RL',
's3'=cbind(RL_LTMpipe.sim.dat[,1:12],RL_LTMpipe.sim.dat[,25]),
's6'=cbind(RL_LTMpipe.sim.dat[,13:24],RL_LTMpipe.sim.dat[,37])
),
data.frame(
'model'='Biased',
's3'=cbind(RL_LTMstr.sim.dat[,1:12],RL_LTMstr.sim.dat[,25]),
's6'=cbind(RL_LTMstr.sim.dat[,13:24],RL_LTMstr.sim.dat[,37])
)
)
colnames(all.models) <- fix_cols
all.models.long <-
all.models %>%
cbind(model.ID) %>%
pivot_longer(cols = c(-"model.ID",-"model"), values_to = 'accuracy', names_to = 'condition')
all.models.long.plt <-
all.models.long %>%
separate("condition", into = c( 'setSize','iteration'), convert = T) %>%
unite("cond.model", c('model','setSize'), remove = FALSE, na.rm = T)
learn.mod.plt <-
all.models.long.plt %>%
filter(iteration<13) %>%
summarySE(measurevar = 'accuracy', groupvars = c('model','setSize','iteration', 'cond.model')) %>%
ggplot(aes(as.factor(iteration),accuracy, group=cond.model,color=cond.model)) +
geom_point(size=1.5) +
geom_errorbar(aes(ymin=accuracy-se, ymax=accuracy+se), width=.25, size=.75) +
geom_line(size=1) +
facet_grid(vars(model),switch = 'both') +
scale_color_brewer(palette = "Paired") +
theme_pubclean(base_size = 20) +
theme(legend.position = 'none')+
xlab('stimulus iteration')
test.mod.plt <-
all.models.long.plt %>%
filter(iteration >=12) %>%
summarySE(measurevar = 'accuracy', groupvars = c('model','setSize','iteration', 'cond.model')) %>%
ggplot(aes(as.factor(iteration),accuracy, group=cond.model,color=cond.model)) +
geom_point(size=1.5) +
geom_errorbar(aes(ymin=accuracy-se, ymax=accuracy+se), width=.15, size=.75) +
geom_line(size=1) +
facet_grid(vars(model),switch = 'both') +
scale_color_brewer(palette = "Paired") +
theme_pubclean(base_size = 20) +
scale_x_discrete(labels=c("end of learning","test"))+
theme(legend.position = 'none')+
xlab('condition')
ggarrange(learn.mod.plt, test.mod.plt, ncol = 2)
simsRL$data$set3_test
simsRL$data$set3_test %>% mean
RL_LTMpipe.sim.dat %>% ncol
RL_LTMpipe.sim.dat[1:10,35:37]
RL_LTMpipe.sim.dat[1:10,30:40]
RL_LTMpipe.sim.dat[1:10,c(26,37)]
RL.sim.dat[, 1:48]
RL.sim.dat %>% nrow()
sdat.mod[1,]
bind_rows(c('set3_learn','set6_learn') %>%
map(~ simsRL$data %>%
.[[.x]] %>%
reduce(rbind) %>%
data.frame() %>%
mutate(condition =.x)
) %>%
reduce(bind_rows) %>%
pivot_longer(cols = starts_with('x')),
c('set3_test', 'set6_test') %>%
map (~ {temp <- simsRL$data %>%
.[[.x]]
data.frame(
condition=.x,
name=paste0('x', rep(c(1:12), 25)),
value=rep(temp, 12)
)
}
))
h=bind_rows(c('set3_learn','set6_learn') %>%
map(~ simsRL$data %>%
.[[.x]] %>%
reduce(rbind) %>%
data.frame() %>%
mutate(condition =.x)
) %>%
reduce(bind_rows) %>%
pivot_longer(cols = starts_with('x')),
c('set3_test', 'set6_test') %>%
map (~ {temp <- simsRL$data %>%
.[[.x]]
data.frame(
condition=.x,
name=paste0('x', rep(c(1:12), 25)),
value=rep(temp, 12)
)
}
))
h$condition
h
str_split(h$name,pattern = 'x')
all.models %>% names
all.models.long.plt %>% names
all.models.long.plt %>% str
all.models.long.plt %>% dplyr::filter(iteration>6 & iteration!=13) %>% dplyr::group_by(model, setSize)
all.models.long.plt %>% dplyr::filter(iteration>6 & iteration!=13) %>% dplyr::group_by(model, setSize) %>% dplyr::summarise(mean(accuracy))
all.models.long.plt %>% dplyr::filter(iteration==13) %>% dplyr::group_by(model, setSize) %>% dplyr::summarise(mean(accuracy))
simsRL$data$set3_test
simsRL$data$set6_test
=======
ggarrange(subjects.only.plt,test.phase.plt)
ggarrange(subjects.only.plt,test.phase.plt, common.legend = T)
learnTestDiff
learnTestDiff  %>%
summarySE(measurevar = "test_learn", groupvars = c( "model", "cond.model"))
fit.lr
filter(estimate.type=='slope') %>%
group_by(setSize,type, model) %>%
dplyr::summarize('mean'= mean(estimate),
'se' = sd(estimate, na.rm = T) / sqrt(sum(!is.na(estimate))))
fit.lr %>%
filter(estimate.type=='slope') %>%
group_by(setSize,type, model) %>%
dplyr::summarize('mean'= mean(estimate),
'se' = sd(estimate, na.rm = T) / sqrt(sum(!is.na(estimate))))
fit.lr.plt
fit.lr %>%
dplyr::filter(type=='behav', estimate.type=='slope') %>%
select(setSize, estimate) %>%
group_by(setSize) %>% summarize(mean(estimate), median(estimate)) %>% kable(caption = 'mean and median of slope for behavioral data by set-size')
fit.lr %>%
dplyr::filter(type=='behav', estimate.type=='slope') %>%
select(setSize, estimate) %>%
group_by(setSize) %>% summarize(mean(estimate), median(estimate))
fit.lr %>%
ungroup() %>%
dplyr::filter(type=='behav', estimate.type=='slope') %>%
select(setSize, estimate) %>%
t.test(estimate ~ setSize, data = .)
fit.lr %>%
filter(estimate.type=='slope') %>%
group_by(setSize,type, model) %>%
dplyr::summarize('mean'= mean(estimate),
'se' = sd(estimate, na.rm = T) / sqrt(sum(!is.na(estimate))))
fit.lr %>%
ungroup() %>%
filter(estimate.type=='slope',model!='RL') %>%
select(estimate,model,setSize,type) %>%
#ggplot(aes(estimate, fill=setSize)) +
#geom_density(alpha=.4)
lm(estimate ~ type*model,data=.) %>% anova
melted.p.behav.model
melted.p.behav.model %>%  filter(model=='Biased') %>% select(bias)
melted.p.behav.model %>%  filter(model=='Biased', type=='behav') %>% select(bias)
melted.p.behav.model %>%  filter(model=='Biased', type=='behav', iteration=='12') %>% select(bias)
melted.p.behav.model %>%  filter(model=='Biased', type=='behav', iteration=='12') %>% select(bias) %>% mean
melted.p.behav.model %>%  filter(model=='Biased', type=='behav', iteration=='12') %>% select(bias) %>% as.numeric() %>% mean()
melted.p.behav.model %>%  filter(model=='Biased', type=='behav', iteration=='12') %>% select(bias) %>% summarise(mean(bias))
0.3636-1
melted.p.behav.model %>%  filter(model=='Biased', type=='behav', iteration=='12') %>% select(bias) %>% mutate('pref'= bias>.4)
melted.p.behav.model %>%  filter(model=='Biased', type=='behav', iteration=='12') %>% select(bias) %>% mutate('pref'= bias<=.4)
melted.p.behav.model %>%  filter(model=='Biased', type=='behav', iteration=='12') %>% select(bias) %>% mutate('pref'= bias<=.4) %>% summarize(mean(pref))
melted.p.behav.model %>% names
melted.p.behav.model %>% head()
melted.p.behav.model %>%  filter(model=='Biased', condition=='s3.12.behav') %>% select(bias) %>% mutate('pref'= bias<=.4)
melted.p.behav.model %>%  filter(model=='Biased', condition=='s3.12.behav') %>% select(bias) %>% mutate('pref'= bias<=.4) %>% summarize(mean(pref))
melted.p.behav.model %>%  filter(model=='Biased', condition=='s3.12.behav') %>% select(bias) %>% mutate('pref'= bias<=.4) %>% summarize(mean(bias))
melted.p.behav.model %>%  filter(model=='Biased', condition=='s3.12.behav') %>% select(bias) %>% mutate('pref'= bias<=.4) %>% summarize(mean(1-bias))
1-36
1-.36
melted.p.behav.model %>%  filter(model=='Biased', condition=='s3.13.behav') %>% select(bias) %>% mutate('pref'= bias<=.4) %>% summarize(mean(1-bias))
melted.p.behav.model %>%  filter(model=='Biased', condition=='s3.12.behav')
melted.p.behav.model %>%  filter(model=='Biased', condition=='s3.12.behav') %>% summarySE()
melted.p.behav.model %>%  filter(model=='Biased', condition=='s3.12.behav') %>% summarySE(measurevar = 'accuracy', groupvars = c('model','setSize','iteration', 'cond.model'))
melted.p.behav.model %>%  filter(model=='Biased', condition=='s3.12.behav') %>% summarySE(measurevar = 'bias', groupvars = c('model','setSize','iteration', 'cond.model'))
>>>>>>> b398e802a2367b69cf29620a9678d34ace7d7332
