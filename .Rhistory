RL.sim
1:nrow(RL.sim)
LTM.sim
LTM.sim
STR.sim
RL.BIC.half1.N3 %>%
as_tibble() %>%
mutate(model='RL', model.id=c(1:nrow(RL.sim)))
1:nrow(RL.sim)
RL.BIC.half1.N3 %>%
as_tibble() %>%
mutate(model='RL', model.id=c(1:nrow(RL.sim)))
yolo = RL.BIC.half1.N3 %>%
as_tibble() %>%
mutate(model='RL', model.id=c(1:nrow(RL.sim)))
yolo$model.id
yolo %>% select(starts_with("v"))
yolo %>% select(starts_with("v"))  %>% apply(., 2, which.min)
best.fits <- tibble('half1_N3' = half1.N3$model[half1.N3 %>% select(-contains('model')) %>%
apply(., 2, which.min)],
'half1_N6' = half1.N6$model[half1.N6 %>% select(-contains('model')) %>%
apply(., 2, which.min)],
'half2_N3' = half2.N3$model[half2.N3 %>% select(-contains('model')) %>%
apply(., 2, which.min)],
'half2_N6' = half2.N6$model[half2.N3 %>% select(-contains('model')) %>%
apply(., 2, which.min)]) %>%
data.frame() %>%
mutate(type = "index",
person = h1.subjects) %>%
pivot_longer(cols = starts_with("half"),
values_to = "model")
best.fit.idx <- tibble('half1_N3' = half1.N3$model.id[half1.N3 %>% select(-contains('model')) %>% apply(., 2, which.min)],
'half1_N6'=  half1.N6$model.id[half1.N6 %>% select(-contains('model')) %>% apply(., 2, which.min)],
'half2_N3'= half2.N3$model.id[half2.N3 %>% select(-contains('model')) %>% apply(., 2, which.min)],
'half2_N6'= half2.N6$model.id[half2.N6 %>% select(-contains('model')) %>% apply(., 2, which.min)]
) %>%
data.frame() %>%
mutate(type = "index",
person = h1.subjects) %>%
pivot_longer(cols = starts_with("half"),
values_to = "index")
best.fit.idx
best.fits <- tibble('half1_N3' = half1.N3$model[half1.N3 %>% select(-contains('model')) %>%
apply(., 2, which.min)],
'half1_N6' = half1.N6$model[half1.N6 %>% select(-contains('model')) %>%
apply(., 2, which.min)],
'half2_N3' = half2.N3$model[half2.N3 %>% select(-contains('model')) %>%
apply(., 2, which.min)],
'half2_N6' = half2.N6$model[half1.N6 %>% select(-contains('model')) %>%
apply(., 2, which.min)]) %>%
data.frame() %>%
mutate(type = "index",
person = h1.subjects) %>%
pivot_longer(cols = starts_with("half"),
values_to = "model")
best.fit.idx <- tibble('half1_N3' = half1.N3$model.id[half1.N3 %>% select(-contains('model')) %>% apply(., 2, which.min)],
'half1_N6'=  half1.N6$model.id[half1.N6 %>% select(-contains('model')) %>% apply(., 2, which.min)],
'half2_N3'= half2.N3$model.id[half2.N3 %>% select(-contains('model')) %>% apply(., 2, which.min)],
'half2_N6'= half2.N6$model.id[half2.N6 %>% select(-contains('model')) %>% apply(., 2, which.min)]
) %>%
data.frame() %>%
mutate(type = "index",
person = h1.subjects) %>%
pivot_longer(cols = starts_with("half"),
values_to = "index")
index_search = merge(
best.fits
,best.fit.idx
,by = c('person', 'name')
) %>%
select(!contains("type"))
index_search
index_search %>%
group_by(model) %>%
summarise(min = min(value))
index_search %>%
group_by(model) %>%
summarise(min = min(index))
index_search
index_search %>%
group_by(model)
index_search %>%
group_by(model) %>%
summarise(min = min(index))
index_search %>%
group_by(model) %>%
summarise(min = max(index))
index_search %>%
group_by(model) %>%
skimr::skim()
index_search %>%
filter(model = "RL")
index_search %>%
filter(model == "RL")
best.fits <- tibble('half1_N3' = half1.N3$model[half1.N3 %>% select(-contains('model')) %>%
apply(., 2, which.min)],
'half1_N6' = half1.N6$model[half1.N6 %>% select(-contains('model')) %>%
apply(., 2, which.min)],
'half2_N3' = half2.N3$model[half2.N3 %>% select(-contains('model')) %>%
apply(., 2, which.min)],
'half2_N6' = half2.N6$model[half1.N6 %>% select(-contains('model')) %>%
apply(., 2, which.min)]) %>%
data.frame() %>%
mutate(type = "index",
person = h1.subjects) %>%
pivot_longer(cols = starts_with("half"),
values_to = "model")
best.fit.idx <- tibble('half1_N3' = half1.N3$model.id[half1.N3 %>% select(-contains('model')) %>% apply(., 2, which.min)],
'half1_N6'=  half1.N6$model.id[half1.N6 %>% select(-contains('model')) %>% apply(., 2, which.min)],
'half2_N3'= half2.N3$model.id[half2.N3 %>% select(-contains('model')) %>% apply(., 2, which.min)],
'half2_N6'= half2.N6$model.id[half2.N6 %>% select(-contains('model')) %>% apply(., 2, which.min)]
) %>%
data.frame() %>%
mutate(type = "index",
person = h1.subjects) %>%
pivot_longer(cols = starts_with("half"),
values_to = "index")
index_search = merge(
best.fits
,best.fit.idx
,by = c('person', 'name')
) %>%
select(!contains("type"))
index_search %>%
filter(model == "RL")
index_search %>%
filter(model == "META")
index_search %>%
filter(model == "LTM")
index_search %>%
filter(model == "STR")
index_search %>%
filter(model == "RL")
index_search %>%
filter(model == "LTM")
RL.BIC.half1.N3
half1.N3 = RL.BIC.half1.N3 %>%
as_tibble() %>%
mutate(model='RL', model.id=c(1:nrow(RL.sim)))
best.fits <- tibble('half1_N3' = half1.N3$model[half1.N3 %>% select(-contains('model')) %>%
apply(., 2, which.min)],
'half1_N6' = half1.N6$model[half1.N6 %>% select(-contains('model')) %>%
apply(., 2, which.min)],
'half2_N3' = half2.N3$model[half2.N3 %>% select(-contains('model')) %>%
apply(., 2, which.min)],
'half2_N6' = half2.N6$model[half2.N6 %>% select(-contains('model')) %>%
apply(., 2, which.min)]) %>%
data.frame() %>%
mutate(type = "index",
person = h1.subjects) %>%
pivot_longer(cols = starts_with("half"),
values_to = "model")
best.fit.idx <- tibble('half1_N3' = half1.N3$model.id[half1.N3 %>% select(-contains('model')) %>% apply(., 2, which.min)],
'half1_N6'=  half1.N6$model.id[half1.N6 %>% select(-contains('model')) %>% apply(., 2, which.min)],
'half2_N3'= half2.N3$model.id[half2.N3 %>% select(-contains('model')) %>% apply(., 2, which.min)],
'half2_N6'= half2.N6$model.id[half2.N6 %>% select(-contains('model')) %>% apply(., 2, which.min)]
) %>%
data.frame() %>%
mutate(type = "index",
person = h1.subjects) %>%
pivot_longer(cols = starts_with("half"),
values_to = "index")
index_search = merge(
best.fits
,best.fit.idx
,by = c('person', 'name')
) %>%
select(!contains("type"))
index_search
index_search %>%
filter(model == "LTM")
index_search %>%
filter(model == "RL")
set3_learn
RL.sim
RL.sim
data = RL.sim
x = "set3_learn"
data = RL.sim
x = "set3_learn"
data %>%
.[[x]]
data %>%
.[[x]] %>%
reduce(rbind)
data %>%
.[[x]] %>%
reduce(rbind) %>%
data.frame() %>%
mutate(condition =x,
model= c(1:25)
)
data
data %>%
.[[x]]
data %>%
.[[x]] %>%
reduce(rbind)
data %>%
.[[x]] %>%
reduce(rbind) %>%
data.frame() %>%
mutate(condition =x,
model= c(1:25)
)
c('set3_learn','set6_learn') %>%
map(~
#column is measurement at T, record is simulation
data %>%
.[[.x]] %>%
reduce(rbind) %>%
data.frame() %>%
mutate(condition = .x,
model= c(1:25)
)
)
c('set3_learn','set6_learn') %>%
map(~
#column is measurement at T, record is simulation
data %>%
.[[.x]] %>%
reduce(rbind) %>%
data.frame() %>%
mutate(condition = .x,
model= c(1:25)
)
)
map(~
#column is measurement at T, record is simulation
data %>%
.[[.x]] %>%
reduce(rbind) %>%
data.frame() %>%
mutate(condition = .x,
model= c(1:25)
)
) %>%
reduce(bind_rows)
c('set3_learn','set6_learn') %>%
map(~
#column is measurement at T, record is simulation
data %>%
.[[.x]] %>%
reduce(rbind) %>%
data.frame() %>%
mutate(condition = .x,
model= c(1:25)
)
) %>%
reduce(bind_rows) %>%
pivot_longer(cols = starts_with('x'), values_to = 'accuracy', names_to = 'iteration')
c('set3_test', 'set6_test') %>%
map (~
{
temp = data %>%
.[[.x]]
data.frame(
condition=.x,
iteration=paste0('x', rep(c(1:12), 25)),
accuracy=rep(temp, 12)
)
}
)
bind_rows(
c('set3_learn','set6_learn') %>%
map(~
#column is measurement at T, record is simulation
data %>%
.[[.x]] %>%
reduce(rbind) %>%
data.frame() %>%
mutate(condition = .x,
model= c(1:25)
)
) %>%
reduce(bind_rows) %>%
pivot_longer(cols = starts_with('x')
,values_to = 'accuracy', names_to = 'iteration'),
c('set3_test', 'set6_test') %>%
map (~
{
temp = data %>%
.[[.x]]
data.frame(
condition=.x,
iteration=paste0('x', rep(c(1:12), 25)),
accuracy=rep(temp, 12)
)
}
)
)
get_data = function(data){
bind_rows(
c('set3_learn','set6_learn') %>%
map(~
#column is measurement at T, record is simulation
data %>%
.[[.x]] %>%
reduce(rbind) %>%
data.frame() %>%
mutate(condition = .x,
model= c(1:25)
)
) %>%
reduce(bind_rows) %>%
pivot_longer(cols = starts_with('x')
,values_to = 'accuracy', names_to = 'iteration'),
c('set3_test', 'set6_test') %>%
map (~
{
temp = data %>%
.[[.x]]
data.frame(
condition=.x,
iteration=paste0('x', rep(c(1:12), 25)),
accuracy=rep(temp, 12)
)
}
)
)
}
get_data = function(data){
bind_rows(
c('set3_learn','set6_learn') %>%
map(~
#column is measurement at T, record is simulation
data %>%
.[[.x]] %>%
reduce(rbind) %>%
data.frame() %>%
mutate(condition = .x,
model= c(1:nrow(data))
)
) %>%
reduce(bind_rows) %>%
pivot_longer(cols = starts_with('x')
,values_to = 'accuracy', names_to = 'iteration'),
c('set3_test', 'set6_test') %>%
map (~
{
temp = data %>%
.[[.x]]
data.frame(
condition=.x,
iteration=paste0('x', rep(c(1:12), nrow(data))),
accuracy=rep(temp, 12)
)
}
)
)
}
RL.sim %>%
get_data
LTM.sim %>%
get_data
STR.sim %>%
get_data
c(RL.sim, , LTM.sim, STR.sim, META.sim) %>%
map(get_data)
c(RL.sim, LTM.sim, STR.sim, META.sim) %>%
map(get_data)
c(RL.sim
#, LTM.sim, STR.sim, META.sim
) %>%
map(get_data)
c(RL.sim
#, LTM.sim, STR.sim, META.sim
) %>%
map(get_data)
STR.sim %>%
get_data
get_data(RL.sim)
get_data(RL.sim)
get_data(RL.sim)mod.idx <-  cbind('subject'=h1.subjects, best.fits, best.fit.idx)
get_data(RL.sim)
get_data(LTM.sim)
get_data(STR.sim)
get_data(META.sim)
bind_rows(
get_data(RL.sim),
get_data(LTM.sim),
get_data(STR.sim),
get_data(META.sim))
index_search
yolo = 3
eval(substitute(yolo))
deparse(substitute(yolo))
get_data = function(data){
bind_rows(
c('set3_learn','set6_learn') %>%
map(~
#column is measurement at T, record is simulation
data %>%
.[[.x]] %>%
reduce(rbind) %>%
data.frame() %>%
mutate(condition = .x,
model= c(1:nrow(data))
)
) %>%
reduce(bind_rows) %>%
pivot_longer(cols = starts_with('x')
,values_to = 'accuracy', names_to = 'iteration'),
c('set3_test', 'set6_test') %>%
map (~
{
temp = data %>%
.[[.x]]
data.frame(
condition=.x,
iteration=paste0('x', rep(c(1:12), nrow(data))),
accuracy=rep(temp, 12)
)
}
)
) %>%
mutate(data_source = deparse(substitute(data)))
}
STR.sim %>%
get_data
RL.sim %>%
get_data(data = .)
get_data = function(data, data_name){
bind_rows(
c('set3_learn','set6_learn') %>%
map(~
#column is measurement at T, record is simulation
data %>%
.[[.x]] %>%
reduce(rbind) %>%
data.frame() %>%
mutate(condition = .x,
model= c(1:nrow(data))
)
) %>%
reduce(bind_rows) %>%
pivot_longer(cols = starts_with('x')
,values_to = 'accuracy', names_to = 'iteration'),
c('set3_test', 'set6_test') %>%
map (~
{
temp = data %>%
.[[.x]]
data.frame(
condition=.x,
iteration=paste0('x', rep(c(1:12), nrow(data))),
accuracy=rep(temp, 12)
)
}
)
) %>%
mutate(data_source = data_name)
}
list(list(RL.sim),
list("JDJDJJJD")) %>%
pmap(get_data)
list(list(RL.sim),
list("RL.sim")) %>%
pmap(get_data)
index_search
list(list(RL.sim, LTM.sim),
list("RL", "LTM")) %>%
pmap(get_data)
data_object =list(list(RL.sim, LTM.sim, STR.sim, META.sim),
list("RL", "LTM", "STR", "META")) %>%
pmap(get_data)
data_object
data_object =list(list(RL.sim, LTM.sim, STR.sim, META.sim),
list("RL", "LTM", "STR", "META")) %>%
pmap(get_data) %>%
reduce(bind_rows)
index_search
data_object
data_object %>%
data_object %>%
mutate(iteration = str_remove_all("[:alpha:]", iteration))
data_object %>%
mutate(iteration = str_remove_all(iteration, "[:alpha:]"))
data_object = data_object %>%
mutate(iteration = str_remove_all(iteration, "[:alpha:]") %>%
as.numeric())
index_search
index_search %>%
merge(data_object
,by.x = c("model", "index")
,by.y = c("data_source", "index")
,all.x = T)
index_search
data_object
index_search %>%
merge(data_object
,by.x = c("model", "index")
,by.y = c("data_source", "model")
,all.x = T)
index_search %>% head()
data_object
merge(data_object
,by.x = c("model", "index")
,by.y = c("data_source", "model")
,all.x = T)
index_search %>% head() %>%
merge(data_object
,by.x = c("model", "index")
,by.y = c("data_source", "model")
,all.x = T)
index_search %>% sample_n()
index_search %>% sample_n(5)
index_search %>% sample_n(5) %>%
merge(data_object
,by.x = c("model", "index")
,by.y = c("data_source", "model")
,all.x = T)
